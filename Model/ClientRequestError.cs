/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// Defines ClientRequestError
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ClientRequestError
    {
        
        /// <summary>
        /// Enum ALREADYMEMBER for "ALREADY_MEMBER"
        /// </summary>
        [EnumMember(Value = "ALREADY_MEMBER")]
        ALREADYMEMBER,
        
        /// <summary>
        /// Enum ALREADYINVITED for "ALREADY_INVITED"
        /// </summary>
        [EnumMember(Value = "ALREADY_INVITED")]
        ALREADYINVITED,
        
        /// <summary>
        /// Enum ALREADYSUGGESTED for "ALREADY_SUGGESTED"
        /// </summary>
        [EnumMember(Value = "ALREADY_SUGGESTED")]
        ALREADYSUGGESTED,
        
        /// <summary>
        /// Enum ALREADYDECLINEWITHDRAW for "ALREADY_DECLINE_WITHDRAW"
        /// </summary>
        [EnumMember(Value = "ALREADY_DECLINE_WITHDRAW")]
        ALREADYDECLINEWITHDRAW,
        
        /// <summary>
        /// Enum ALREADYVOTEWITHDRAW for "ALREADY_VOTE_WITHDRAW"
        /// </summary>
        [EnumMember(Value = "ALREADY_VOTE_WITHDRAW")]
        ALREADYVOTEWITHDRAW,
        
        /// <summary>
        /// Enum ALREADYINPHASE for "ALREADY_IN_PHASE"
        /// </summary>
        [EnumMember(Value = "ALREADY_IN_PHASE")]
        ALREADYINPHASE,
        
        /// <summary>
        /// Enum CAPTAINNOTALLOWED for "CAPTAIN_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "CAPTAIN_NOT_ALLOWED")]
        CAPTAINNOTALLOWED,
        
        /// <summary>
        /// Enum FAILINVITE for "FAIL_INVITE"
        /// </summary>
        [EnumMember(Value = "FAIL_INVITE")]
        FAILINVITE,
        
        /// <summary>
        /// Enum FAILSUGGESTINVITE for "FAIL_SUGGESTINVITE"
        /// </summary>
        [EnumMember(Value = "FAIL_SUGGESTINVITE")]
        FAILSUGGESTINVITE,
        
        /// <summary>
        /// Enum LOGONOTALLOWED for "LOGO_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "LOGO_NOT_ALLOWED")]
        LOGONOTALLOWED,
        
        /// <summary>
        /// Enum LOGOCOLORNOTALLOWED for "LOGOCOLOR_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "LOGOCOLOR_NOT_ALLOWED")]
        LOGOCOLORNOTALLOWED,
        
        /// <summary>
        /// Enum INOTHERROSTER for "IN_OTHER_ROSTER"
        /// </summary>
        [EnumMember(Value = "IN_OTHER_ROSTER")]
        INOTHERROSTER,
        
        /// <summary>
        /// Enum INOTHERPENDINGROSTER for "IN_OTHER_PENDINGROSTER"
        /// </summary>
        [EnumMember(Value = "IN_OTHER_PENDINGROSTER")]
        INOTHERPENDINGROSTER,
        
        /// <summary>
        /// Enum INOTHERPHASE for "IN_OTHER_PHASE"
        /// </summary>
        [EnumMember(Value = "IN_OTHER_PHASE")]
        INOTHERPHASE,
        
        /// <summary>
        /// Enum INACTIVEREGISTRATION for "INACTIVE_REGISTRATION"
        /// </summary>
        [EnumMember(Value = "INACTIVE_REGISTRATION")]
        INACTIVEREGISTRATION,
        
        /// <summary>
        /// Enum INACTIVEPHASE for "INACTIVE_PHASE"
        /// </summary>
        [EnumMember(Value = "INACTIVE_PHASE")]
        INACTIVEPHASE,
        
        /// <summary>
        /// Enum INTERNALERROR for "INTERNAL_ERROR"
        /// </summary>
        [EnumMember(Value = "INTERNAL_ERROR")]
        INTERNALERROR,
        
        /// <summary>
        /// Enum INVALIDROSTER for "INVALID_ROSTER"
        /// </summary>
        [EnumMember(Value = "INVALID_ROSTER")]
        INVALIDROSTER,
        
        /// <summary>
        /// Enum INVALIDBUYBACK for "INVALID_BUY_BACK"
        /// </summary>
        [EnumMember(Value = "INVALID_BUY_BACK")]
        INVALIDBUYBACK,
        
        /// <summary>
        /// Enum INVALIDSUB for "INVALID_SUB"
        /// </summary>
        [EnumMember(Value = "INVALID_SUB")]
        INVALIDSUB,
        
        /// <summary>
        /// Enum INVALIDTOURNAMENT for "INVALID_TOURNAMENT"
        /// </summary>
        [EnumMember(Value = "INVALID_TOURNAMENT")]
        INVALIDTOURNAMENT,
        
        /// <summary>
        /// Enum INVALIDPHASE for "INVALID_PHASE"
        /// </summary>
        [EnumMember(Value = "INVALID_PHASE")]
        INVALIDPHASE,
        
        /// <summary>
        /// Enum INVALIDINVITEE for "INVALID_INVITEE"
        /// </summary>
        [EnumMember(Value = "INVALID_INVITEE")]
        INVALIDINVITEE,
        
        /// <summary>
        /// Enum INVALIDROSTERMEMBERSIZE for "INVALID_ROSTER_MEMBER_SIZE"
        /// </summary>
        [EnumMember(Value = "INVALID_ROSTER_MEMBER_SIZE")]
        INVALIDROSTERMEMBERSIZE,
        
        /// <summary>
        /// Enum INVALIDPOSITION for "INVALID_POSITION"
        /// </summary>
        [EnumMember(Value = "INVALID_POSITION")]
        INVALIDPOSITION,
        
        /// <summary>
        /// Enum INVALIDLOGO for "INVALID_LOGO"
        /// </summary>
        [EnumMember(Value = "INVALID_LOGO")]
        INVALIDLOGO,
        
        /// <summary>
        /// Enum INVALIDLOGOCOLOR for "INVALID_LOGOCOLOR"
        /// </summary>
        [EnumMember(Value = "INVALID_LOGOCOLOR")]
        INVALIDLOGOCOLOR,
        
        /// <summary>
        /// Enum INVALIDNAME for "INVALID_NAME"
        /// </summary>
        [EnumMember(Value = "INVALID_NAME")]
        INVALIDNAME,
        
        /// <summary>
        /// Enum INVALIDSHORTNAME for "INVALID_SHORTNAME"
        /// </summary>
        [EnumMember(Value = "INVALID_SHORTNAME")]
        INVALIDSHORTNAME,
        
        /// <summary>
        /// Enum INVALIDCHECKELIGIBILITYSIZE for "INVALID_CHECKELIGIBILITY_SIZE"
        /// </summary>
        [EnumMember(Value = "INVALID_CHECKELIGIBILITY_SIZE")]
        INVALIDCHECKELIGIBILITYSIZE,
        
        /// <summary>
        /// Enum INVALIDBRACKET for "INVALID_BRACKET"
        /// </summary>
        [EnumMember(Value = "INVALID_BRACKET")]
        INVALIDBRACKET,
        
        /// <summary>
        /// Enum INVALIDMATCHID for "INVALID_MATCHID"
        /// </summary>
        [EnumMember(Value = "INVALID_MATCHID")]
        INVALIDMATCHID,
        
        /// <summary>
        /// Enum INVALIDPLAYER for "INVALID_PLAYER"
        /// </summary>
        [EnumMember(Value = "INVALID_PLAYER")]
        INVALIDPLAYER,
        
        /// <summary>
        /// Enum INVALIDWITHDRAW for "INVALID_WITHDRAW"
        /// </summary>
        [EnumMember(Value = "INVALID_WITHDRAW")]
        INVALIDWITHDRAW,
        
        /// <summary>
        /// Enum INVALIDMATCHSTATUSFORGAMEEND for "INVALID_MATCHSTATUS_FORGAMEEND"
        /// </summary>
        [EnumMember(Value = "INVALID_MATCHSTATUS_FORGAMEEND")]
        INVALIDMATCHSTATUSFORGAMEEND,
        
        /// <summary>
        /// Enum MAXINVITED for "MAX_INVITED"
        /// </summary>
        [EnumMember(Value = "MAX_INVITED")]
        MAXINVITED,
        
        /// <summary>
        /// Enum MAXSUBED for "MAX_SUBED"
        /// </summary>
        [EnumMember(Value = "MAX_SUBED")]
        MAXSUBED,
        
        /// <summary>
        /// Enum MAXROSTERFETCHSIZE for "MAX_ROSTER_FETCHSIZE"
        /// </summary>
        [EnumMember(Value = "MAX_ROSTER_FETCHSIZE")]
        MAXROSTERFETCHSIZE,
        
        /// <summary>
        /// Enum MAXSUBSIZE for "MAX_SUB_SIZE"
        /// </summary>
        [EnumMember(Value = "MAX_SUB_SIZE")]
        MAXSUBSIZE,
        
        /// <summary>
        /// Enum NOSAMEPLAYER for "NO_SAME_PLAYER"
        /// </summary>
        [EnumMember(Value = "NO_SAME_PLAYER")]
        NOSAMEPLAYER,
        
        /// <summary>
        /// Enum NOPERMISSIONCREATEROSTER for "NO_PERMISSION_CREATE_ROSTER"
        /// </summary>
        [EnumMember(Value = "NO_PERMISSION_CREATE_ROSTER")]
        NOPERMISSIONCREATEROSTER,
        
        /// <summary>
        /// Enum NOPERMISSIONREGISTERROSTER for "NO_PERMISSION_REGISTER_ROSTER"
        /// </summary>
        [EnumMember(Value = "NO_PERMISSION_REGISTER_ROSTER")]
        NOPERMISSIONREGISTERROSTER,
        
        /// <summary>
        /// Enum NOAVAILABLEPHASE for "NO_AVAILABLE_PHASE"
        /// </summary>
        [EnumMember(Value = "NO_AVAILABLE_PHASE")]
        NOAVAILABLEPHASE,
        
        /// <summary>
        /// Enum NOTCAPTAIN for "NOT_CAPTAIN"
        /// </summary>
        [EnumMember(Value = "NOT_CAPTAIN")]
        NOTCAPTAIN,
        
        /// <summary>
        /// Enum NOTMEMBER for "NOT_MEMBER"
        /// </summary>
        [EnumMember(Value = "NOT_MEMBER")]
        NOTMEMBER,
        
        /// <summary>
        /// Enum NOTINVITEE for "NOT_INVITEE"
        /// </summary>
        [EnumMember(Value = "NOT_INVITEE")]
        NOTINVITEE,
        
        /// <summary>
        /// Enum NOTSEEDINTOLEAGUE for "NOT_SEED_INTO_LEAGUE"
        /// </summary>
        [EnumMember(Value = "NOT_SEED_INTO_LEAGUE")]
        NOTSEEDINTOLEAGUE,
        
        /// <summary>
        /// Enum NOTUNANIMOUS for "NOT_UNANIMOUS"
        /// </summary>
        [EnumMember(Value = "NOT_UNANIMOUS")]
        NOTUNANIMOUS,
        
        /// <summary>
        /// Enum NOTENOUGHTICKETS for "NOT_ENOUGH_TICKETS"
        /// </summary>
        [EnumMember(Value = "NOT_ENOUGH_TICKETS")]
        NOTENOUGHTICKETS,
        
        /// <summary>
        /// Enum NOTALLOWEDDELETETOURNAMENT for "NOT_ALLOWED_DELETE_TOURNAMENT"
        /// </summary>
        [EnumMember(Value = "NOT_ALLOWED_DELETE_TOURNAMENT")]
        NOTALLOWEDDELETETOURNAMENT,
        
        /// <summary>
        /// Enum OVERSUGGESTIONINVITE for "OVER_SUGGESTION_INVITE"
        /// </summary>
        [EnumMember(Value = "OVER_SUGGESTION_INVITE")]
        OVERSUGGESTIONINVITE,
        
        /// <summary>
        /// Enum OVERINVITE for "OVER_INVITE"
        /// </summary>
        [EnumMember(Value = "OVER_INVITE")]
        OVERINVITE,
        
        /// <summary>
        /// Enum PENDINGROSTERNOTREADY for "PENDING_ROSTER_NOT_READY"
        /// </summary>
        [EnumMember(Value = "PENDING_ROSTER_NOT_READY")]
        PENDINGROSTERNOTREADY,
        
        /// <summary>
        /// Enum PENDINGROSTERFULL for "PENDING_ROSTER_FULL"
        /// </summary>
        [EnumMember(Value = "PENDING_ROSTER_FULL")]
        PENDINGROSTERFULL,
        
        /// <summary>
        /// Enum PENDINGROSTERCLOSE for "PENDING_ROSTER_CLOSE"
        /// </summary>
        [EnumMember(Value = "PENDING_ROSTER_CLOSE")]
        PENDINGROSTERCLOSE,
        
        /// <summary>
        /// Enum ROSTERELIMINATED for "ROSTER_ELIMINATED"
        /// </summary>
        [EnumMember(Value = "ROSTER_ELIMINATED")]
        ROSTERELIMINATED,
        
        /// <summary>
        /// Enum ROSTERNOTELIMINATED for "ROSTER_NOT_ELIMINATED"
        /// </summary>
        [EnumMember(Value = "ROSTER_NOT_ELIMINATED")]
        ROSTERNOTELIMINATED,
        
        /// <summary>
        /// Enum ROSTERDISBANDNOTALLOWED for "ROSTER_DISBAND_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "ROSTER_DISBAND_NOT_ALLOWED")]
        ROSTERDISBANDNOTALLOWED,
        
        /// <summary>
        /// Enum SUGGESTINVITEENOTEXIST for "SUGGEST_INVITEE_NOT_EXIST"
        /// </summary>
        [EnumMember(Value = "SUGGEST_INVITEE_NOT_EXIST")]
        SUGGESTINVITEENOTEXIST,
        
        /// <summary>
        /// Enum TICKETALREADYSET for "TICKET_ALREADY_SET"
        /// </summary>
        [EnumMember(Value = "TICKET_ALREADY_SET")]
        TICKETALREADYSET,
        
        /// <summary>
        /// Enum TICKETOFFERNOTEXIST for "TICKET_OFFER_NOT_EXIST"
        /// </summary>
        [EnumMember(Value = "TICKET_OFFER_NOT_EXIST")]
        TICKETOFFERNOTEXIST,
        
        /// <summary>
        /// Enum TICKETOFFEROVERLIMIT for "TICKET_OFFER_OVER_LIMIT"
        /// </summary>
        [EnumMember(Value = "TICKET_OFFER_OVER_LIMIT")]
        TICKETOFFEROVERLIMIT,
        
        /// <summary>
        /// Enum TICKETNOTSET for "TICKET_NOT_SET"
        /// </summary>
        [EnumMember(Value = "TICKET_NOT_SET")]
        TICKETNOTSET,
        
        /// <summary>
        /// Enum WITHDRAWNOTALLOWED for "WITHDRAW_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "WITHDRAW_NOT_ALLOWED")]
        WITHDRAWNOTALLOWED,
        
        /// <summary>
        /// Enum WITHDRAWCANCELNOTALLOWED for "WITHDRAW_CANCEL_NOT_ALLOWED"
        /// </summary>
        [EnumMember(Value = "WITHDRAW_CANCEL_NOT_ALLOWED")]
        WITHDRAWCANCELNOTALLOWED,
        
        /// <summary>
        /// Enum WITHDRAWLOCKOUT for "WITHDRAW_LOCKOUT"
        /// </summary>
        [EnumMember(Value = "WITHDRAW_LOCKOUT")]
        WITHDRAWLOCKOUT
    }

}
