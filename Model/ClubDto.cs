/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// ClubDto
    /// </summary>
    [DataContract]
    public partial class ClubDto :  IEquatable<ClubDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClubDto" /> class.
        /// </summary>
        /// <param name="ClubData">ClubData.</param>
        /// <param name="Membership">Membership.</param>
        /// <param name="PlatformId">PlatformId.</param>
        /// <param name="ResourceUri">ResourceUri.</param>
        public ClubDto(ClubDataDto ClubData = default(ClubDataDto), ClubMembershipDto Membership = default(ClubMembershipDto), string PlatformId = default(string), string ResourceUri = default(string))
        {
            this.ClubData = ClubData;
            this.Membership = Membership;
            this.PlatformId = PlatformId;
            this.ResourceUri = ResourceUri;
        }
        
        /// <summary>
        /// Gets or Sets ClubData
        /// </summary>
        [DataMember(Name="clubData", EmitDefaultValue=false)]
        public ClubDataDto ClubData { get; set; }

        /// <summary>
        /// Gets or Sets Membership
        /// </summary>
        [DataMember(Name="membership", EmitDefaultValue=false)]
        public ClubMembershipDto Membership { get; set; }

        /// <summary>
        /// Gets or Sets PlatformId
        /// </summary>
        [DataMember(Name="platformId", EmitDefaultValue=false)]
        public string PlatformId { get; set; }

        /// <summary>
        /// Gets or Sets ResourceUri
        /// </summary>
        [DataMember(Name="resourceUri", EmitDefaultValue=false)]
        public string ResourceUri { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClubDto {\n");
            sb.Append("  ClubData: ").Append(ClubData).Append("\n");
            sb.Append("  Membership: ").Append(Membership).Append("\n");
            sb.Append("  PlatformId: ").Append(PlatformId).Append("\n");
            sb.Append("  ResourceUri: ").Append(ResourceUri).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ClubDto);
        }

        /// <summary>
        /// Returns true if ClubDto instances are equal
        /// </summary>
        /// <param name="other">Instance of ClubDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClubDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ClubData == other.ClubData ||
                    this.ClubData != null &&
                    this.ClubData.Equals(other.ClubData)
                ) && 
                (
                    this.Membership == other.Membership ||
                    this.Membership != null &&
                    this.Membership.Equals(other.Membership)
                ) && 
                (
                    this.PlatformId == other.PlatformId ||
                    this.PlatformId != null &&
                    this.PlatformId.Equals(other.PlatformId)
                ) && 
                (
                    this.ResourceUri == other.ResourceUri ||
                    this.ResourceUri != null &&
                    this.ResourceUri.Equals(other.ResourceUri)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ClubData != null)
                    hash = hash * 59 + this.ClubData.GetHashCode();
                if (this.Membership != null)
                    hash = hash * 59 + this.Membership.GetHashCode();
                if (this.PlatformId != null)
                    hash = hash * 59 + this.PlatformId.GetHashCode();
                if (this.ResourceUri != null)
                    hash = hash * 59 + this.ResourceUri.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
