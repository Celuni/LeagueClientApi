/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// ClubsServerConfigDto
    /// </summary>
    [DataContract]
    public partial class ClubsServerConfigDto :  IEquatable<ClubsServerConfigDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClubsServerConfigDto" /> class.
        /// </summary>
        /// <param name="ClubDescriptionMaxLength">ClubDescriptionMaxLength.</param>
        /// <param name="ClubMotdMaxLength">ClubMotdMaxLength.</param>
        /// <param name="ClubNominationsEnabled">ClubNominationsEnabled.</param>
        /// <param name="ClubNominationsMaxPending">ClubNominationsMaxPending.</param>
        /// <param name="ClubTagRequirementMinGames">ClubTagRequirementMinGames.</param>
        /// <param name="ClubTagRequirementMinMembers">ClubTagRequirementMinMembers.</param>
        /// <param name="ClubTagRequirementsMinMemberLevel">ClubTagRequirementsMinMemberLevel.</param>
        /// <param name="MaxActiveClubs">MaxActiveClubs.</param>
        /// <param name="MaxClubNameLength">MaxClubNameLength.</param>
        /// <param name="MaxClubTagLength">MaxClubTagLength.</param>
        /// <param name="MinClubNameLength">MinClubNameLength.</param>
        /// <param name="MinClubTagLength">MinClubTagLength.</param>
        public ClubsServerConfigDto(int? ClubDescriptionMaxLength = default(int?), int? ClubMotdMaxLength = default(int?), bool? ClubNominationsEnabled = default(bool?), int? ClubNominationsMaxPending = default(int?), int? ClubTagRequirementMinGames = default(int?), int? ClubTagRequirementMinMembers = default(int?), int? ClubTagRequirementsMinMemberLevel = default(int?), int? MaxActiveClubs = default(int?), int? MaxClubNameLength = default(int?), int? MaxClubTagLength = default(int?), int? MinClubNameLength = default(int?), int? MinClubTagLength = default(int?))
        {
            this.ClubDescriptionMaxLength = ClubDescriptionMaxLength;
            this.ClubMotdMaxLength = ClubMotdMaxLength;
            this.ClubNominationsEnabled = ClubNominationsEnabled;
            this.ClubNominationsMaxPending = ClubNominationsMaxPending;
            this.ClubTagRequirementMinGames = ClubTagRequirementMinGames;
            this.ClubTagRequirementMinMembers = ClubTagRequirementMinMembers;
            this.ClubTagRequirementsMinMemberLevel = ClubTagRequirementsMinMemberLevel;
            this.MaxActiveClubs = MaxActiveClubs;
            this.MaxClubNameLength = MaxClubNameLength;
            this.MaxClubTagLength = MaxClubTagLength;
            this.MinClubNameLength = MinClubNameLength;
            this.MinClubTagLength = MinClubTagLength;
        }
        
        /// <summary>
        /// Gets or Sets ClubDescriptionMaxLength
        /// </summary>
        [DataMember(Name="clubDescriptionMaxLength", EmitDefaultValue=false)]
        public int? ClubDescriptionMaxLength { get; set; }

        /// <summary>
        /// Gets or Sets ClubMotdMaxLength
        /// </summary>
        [DataMember(Name="clubMotdMaxLength", EmitDefaultValue=false)]
        public int? ClubMotdMaxLength { get; set; }

        /// <summary>
        /// Gets or Sets ClubNominationsEnabled
        /// </summary>
        [DataMember(Name="clubNominationsEnabled", EmitDefaultValue=false)]
        public bool? ClubNominationsEnabled { get; set; }

        /// <summary>
        /// Gets or Sets ClubNominationsMaxPending
        /// </summary>
        [DataMember(Name="clubNominationsMaxPending", EmitDefaultValue=false)]
        public int? ClubNominationsMaxPending { get; set; }

        /// <summary>
        /// Gets or Sets ClubTagRequirementMinGames
        /// </summary>
        [DataMember(Name="clubTagRequirementMinGames", EmitDefaultValue=false)]
        public int? ClubTagRequirementMinGames { get; set; }

        /// <summary>
        /// Gets or Sets ClubTagRequirementMinMembers
        /// </summary>
        [DataMember(Name="clubTagRequirementMinMembers", EmitDefaultValue=false)]
        public int? ClubTagRequirementMinMembers { get; set; }

        /// <summary>
        /// Gets or Sets ClubTagRequirementsMinMemberLevel
        /// </summary>
        [DataMember(Name="clubTagRequirementsMinMemberLevel", EmitDefaultValue=false)]
        public int? ClubTagRequirementsMinMemberLevel { get; set; }

        /// <summary>
        /// Gets or Sets MaxActiveClubs
        /// </summary>
        [DataMember(Name="maxActiveClubs", EmitDefaultValue=false)]
        public int? MaxActiveClubs { get; set; }

        /// <summary>
        /// Gets or Sets MaxClubNameLength
        /// </summary>
        [DataMember(Name="maxClubNameLength", EmitDefaultValue=false)]
        public int? MaxClubNameLength { get; set; }

        /// <summary>
        /// Gets or Sets MaxClubTagLength
        /// </summary>
        [DataMember(Name="maxClubTagLength", EmitDefaultValue=false)]
        public int? MaxClubTagLength { get; set; }

        /// <summary>
        /// Gets or Sets MinClubNameLength
        /// </summary>
        [DataMember(Name="minClubNameLength", EmitDefaultValue=false)]
        public int? MinClubNameLength { get; set; }

        /// <summary>
        /// Gets or Sets MinClubTagLength
        /// </summary>
        [DataMember(Name="minClubTagLength", EmitDefaultValue=false)]
        public int? MinClubTagLength { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClubsServerConfigDto {\n");
            sb.Append("  ClubDescriptionMaxLength: ").Append(ClubDescriptionMaxLength).Append("\n");
            sb.Append("  ClubMotdMaxLength: ").Append(ClubMotdMaxLength).Append("\n");
            sb.Append("  ClubNominationsEnabled: ").Append(ClubNominationsEnabled).Append("\n");
            sb.Append("  ClubNominationsMaxPending: ").Append(ClubNominationsMaxPending).Append("\n");
            sb.Append("  ClubTagRequirementMinGames: ").Append(ClubTagRequirementMinGames).Append("\n");
            sb.Append("  ClubTagRequirementMinMembers: ").Append(ClubTagRequirementMinMembers).Append("\n");
            sb.Append("  ClubTagRequirementsMinMemberLevel: ").Append(ClubTagRequirementsMinMemberLevel).Append("\n");
            sb.Append("  MaxActiveClubs: ").Append(MaxActiveClubs).Append("\n");
            sb.Append("  MaxClubNameLength: ").Append(MaxClubNameLength).Append("\n");
            sb.Append("  MaxClubTagLength: ").Append(MaxClubTagLength).Append("\n");
            sb.Append("  MinClubNameLength: ").Append(MinClubNameLength).Append("\n");
            sb.Append("  MinClubTagLength: ").Append(MinClubTagLength).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ClubsServerConfigDto);
        }

        /// <summary>
        /// Returns true if ClubsServerConfigDto instances are equal
        /// </summary>
        /// <param name="other">Instance of ClubsServerConfigDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClubsServerConfigDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ClubDescriptionMaxLength == other.ClubDescriptionMaxLength ||
                    this.ClubDescriptionMaxLength != null &&
                    this.ClubDescriptionMaxLength.Equals(other.ClubDescriptionMaxLength)
                ) && 
                (
                    this.ClubMotdMaxLength == other.ClubMotdMaxLength ||
                    this.ClubMotdMaxLength != null &&
                    this.ClubMotdMaxLength.Equals(other.ClubMotdMaxLength)
                ) && 
                (
                    this.ClubNominationsEnabled == other.ClubNominationsEnabled ||
                    this.ClubNominationsEnabled != null &&
                    this.ClubNominationsEnabled.Equals(other.ClubNominationsEnabled)
                ) && 
                (
                    this.ClubNominationsMaxPending == other.ClubNominationsMaxPending ||
                    this.ClubNominationsMaxPending != null &&
                    this.ClubNominationsMaxPending.Equals(other.ClubNominationsMaxPending)
                ) && 
                (
                    this.ClubTagRequirementMinGames == other.ClubTagRequirementMinGames ||
                    this.ClubTagRequirementMinGames != null &&
                    this.ClubTagRequirementMinGames.Equals(other.ClubTagRequirementMinGames)
                ) && 
                (
                    this.ClubTagRequirementMinMembers == other.ClubTagRequirementMinMembers ||
                    this.ClubTagRequirementMinMembers != null &&
                    this.ClubTagRequirementMinMembers.Equals(other.ClubTagRequirementMinMembers)
                ) && 
                (
                    this.ClubTagRequirementsMinMemberLevel == other.ClubTagRequirementsMinMemberLevel ||
                    this.ClubTagRequirementsMinMemberLevel != null &&
                    this.ClubTagRequirementsMinMemberLevel.Equals(other.ClubTagRequirementsMinMemberLevel)
                ) && 
                (
                    this.MaxActiveClubs == other.MaxActiveClubs ||
                    this.MaxActiveClubs != null &&
                    this.MaxActiveClubs.Equals(other.MaxActiveClubs)
                ) && 
                (
                    this.MaxClubNameLength == other.MaxClubNameLength ||
                    this.MaxClubNameLength != null &&
                    this.MaxClubNameLength.Equals(other.MaxClubNameLength)
                ) && 
                (
                    this.MaxClubTagLength == other.MaxClubTagLength ||
                    this.MaxClubTagLength != null &&
                    this.MaxClubTagLength.Equals(other.MaxClubTagLength)
                ) && 
                (
                    this.MinClubNameLength == other.MinClubNameLength ||
                    this.MinClubNameLength != null &&
                    this.MinClubNameLength.Equals(other.MinClubNameLength)
                ) && 
                (
                    this.MinClubTagLength == other.MinClubTagLength ||
                    this.MinClubTagLength != null &&
                    this.MinClubTagLength.Equals(other.MinClubTagLength)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ClubDescriptionMaxLength != null)
                    hash = hash * 59 + this.ClubDescriptionMaxLength.GetHashCode();
                if (this.ClubMotdMaxLength != null)
                    hash = hash * 59 + this.ClubMotdMaxLength.GetHashCode();
                if (this.ClubNominationsEnabled != null)
                    hash = hash * 59 + this.ClubNominationsEnabled.GetHashCode();
                if (this.ClubNominationsMaxPending != null)
                    hash = hash * 59 + this.ClubNominationsMaxPending.GetHashCode();
                if (this.ClubTagRequirementMinGames != null)
                    hash = hash * 59 + this.ClubTagRequirementMinGames.GetHashCode();
                if (this.ClubTagRequirementMinMembers != null)
                    hash = hash * 59 + this.ClubTagRequirementMinMembers.GetHashCode();
                if (this.ClubTagRequirementsMinMemberLevel != null)
                    hash = hash * 59 + this.ClubTagRequirementsMinMemberLevel.GetHashCode();
                if (this.MaxActiveClubs != null)
                    hash = hash * 59 + this.MaxActiveClubs.GetHashCode();
                if (this.MaxClubNameLength != null)
                    hash = hash * 59 + this.MaxClubNameLength.GetHashCode();
                if (this.MaxClubTagLength != null)
                    hash = hash * 59 + this.MaxClubTagLength.GetHashCode();
                if (this.MinClubNameLength != null)
                    hash = hash * 59 + this.MinClubNameLength.GetHashCode();
                if (this.MinClubTagLength != null)
                    hash = hash * 59 + this.MinClubTagLength.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
