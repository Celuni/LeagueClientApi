/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolBannersClashV2FlagRewardSpec
    /// </summary>
    [DataContract]
    public partial class LolBannersClashV2FlagRewardSpec :  IEquatable<LolBannersClashV2FlagRewardSpec>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolBannersClashV2FlagRewardSpec" /> class.
        /// </summary>
        /// <param name="Level">Level.</param>
        /// <param name="SeasonId">SeasonId.</param>
        /// <param name="Theme">Theme.</param>
        public LolBannersClashV2FlagRewardSpec(string Level = default(string), string SeasonId = default(string), string Theme = default(string))
        {
            this.Level = Level;
            this.SeasonId = SeasonId;
            this.Theme = Theme;
        }
        
        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name="level", EmitDefaultValue=false)]
        public string Level { get; set; }

        /// <summary>
        /// Gets or Sets SeasonId
        /// </summary>
        [DataMember(Name="seasonId", EmitDefaultValue=false)]
        public string SeasonId { get; set; }

        /// <summary>
        /// Gets or Sets Theme
        /// </summary>
        [DataMember(Name="theme", EmitDefaultValue=false)]
        public string Theme { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolBannersClashV2FlagRewardSpec {\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  SeasonId: ").Append(SeasonId).Append("\n");
            sb.Append("  Theme: ").Append(Theme).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolBannersClashV2FlagRewardSpec);
        }

        /// <summary>
        /// Returns true if LolBannersClashV2FlagRewardSpec instances are equal
        /// </summary>
        /// <param name="other">Instance of LolBannersClashV2FlagRewardSpec to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolBannersClashV2FlagRewardSpec other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Level == other.Level ||
                    this.Level != null &&
                    this.Level.Equals(other.Level)
                ) && 
                (
                    this.SeasonId == other.SeasonId ||
                    this.SeasonId != null &&
                    this.SeasonId.Equals(other.SeasonId)
                ) && 
                (
                    this.Theme == other.Theme ||
                    this.Theme != null &&
                    this.Theme.Equals(other.Theme)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Level != null)
                    hash = hash * 59 + this.Level.GetHashCode();
                if (this.SeasonId != null)
                    hash = hash * 59 + this.SeasonId.GetHashCode();
                if (this.Theme != null)
                    hash = hash * 59 + this.Theme.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
