/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolCollectionsSummonerData
    /// </summary>
    [DataContract]
    public partial class LolCollectionsSummonerData :  IEquatable<LolCollectionsSummonerData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolCollectionsSummonerData" /> class.
        /// </summary>
        /// <param name="MasteryBook">MasteryBook.</param>
        /// <param name="SpellBook">SpellBook.</param>
        public LolCollectionsSummonerData(CollectionsLcdsMasteryBookDTO MasteryBook = default(CollectionsLcdsMasteryBookDTO), CollectionsLcdsSpellBookDTO SpellBook = default(CollectionsLcdsSpellBookDTO))
        {
            this.MasteryBook = MasteryBook;
            this.SpellBook = SpellBook;
        }
        
        /// <summary>
        /// Gets or Sets MasteryBook
        /// </summary>
        [DataMember(Name="masteryBook", EmitDefaultValue=false)]
        public CollectionsLcdsMasteryBookDTO MasteryBook { get; set; }

        /// <summary>
        /// Gets or Sets SpellBook
        /// </summary>
        [DataMember(Name="spellBook", EmitDefaultValue=false)]
        public CollectionsLcdsSpellBookDTO SpellBook { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolCollectionsSummonerData {\n");
            sb.Append("  MasteryBook: ").Append(MasteryBook).Append("\n");
            sb.Append("  SpellBook: ").Append(SpellBook).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolCollectionsSummonerData);
        }

        /// <summary>
        /// Returns true if LolCollectionsSummonerData instances are equal
        /// </summary>
        /// <param name="other">Instance of LolCollectionsSummonerData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolCollectionsSummonerData other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.MasteryBook == other.MasteryBook ||
                    this.MasteryBook != null &&
                    this.MasteryBook.Equals(other.MasteryBook)
                ) && 
                (
                    this.SpellBook == other.SpellBook ||
                    this.SpellBook != null &&
                    this.SpellBook.Equals(other.SpellBook)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.MasteryBook != null)
                    hash = hash * 59 + this.MasteryBook.GetHashCode();
                if (this.SpellBook != null)
                    hash = hash * 59 + this.SpellBook.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
