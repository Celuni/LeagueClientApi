/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolLobbyEligibilityRestriction
    /// </summary>
    [DataContract]
    public partial class LolLobbyEligibilityRestriction :  IEquatable<LolLobbyEligibilityRestriction>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolLobbyEligibilityRestriction" /> class.
        /// </summary>
        /// <param name="ExpiredTimestamp">ExpiredTimestamp.</param>
        /// <param name="RestrictionArgs">RestrictionArgs.</param>
        /// <param name="RestrictionCode">RestrictionCode.</param>
        /// <param name="SummonerIds">SummonerIds.</param>
        public LolLobbyEligibilityRestriction(long? ExpiredTimestamp = default(long?), Dictionary<string, string> RestrictionArgs = default(Dictionary<string, string>), LolLobbyEligibilityRestrictionCode RestrictionCode = default(LolLobbyEligibilityRestrictionCode), List<long?> SummonerIds = default(List<long?>))
        {
            this.ExpiredTimestamp = ExpiredTimestamp;
            this.RestrictionArgs = RestrictionArgs;
            this.RestrictionCode = RestrictionCode;
            this.SummonerIds = SummonerIds;
        }
        
        /// <summary>
        /// Gets or Sets ExpiredTimestamp
        /// </summary>
        [DataMember(Name="expiredTimestamp", EmitDefaultValue=false)]
        public long? ExpiredTimestamp { get; set; }

        /// <summary>
        /// Gets or Sets RestrictionArgs
        /// </summary>
        [DataMember(Name="restrictionArgs", EmitDefaultValue=false)]
        public Dictionary<string, string> RestrictionArgs { get; set; }

        /// <summary>
        /// Gets or Sets RestrictionCode
        /// </summary>
        [DataMember(Name="restrictionCode", EmitDefaultValue=false)]
        public LolLobbyEligibilityRestrictionCode RestrictionCode { get; set; }

        /// <summary>
        /// Gets or Sets SummonerIds
        /// </summary>
        [DataMember(Name="summonerIds", EmitDefaultValue=false)]
        public List<long?> SummonerIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolLobbyEligibilityRestriction {\n");
            sb.Append("  ExpiredTimestamp: ").Append(ExpiredTimestamp).Append("\n");
            sb.Append("  RestrictionArgs: ").Append(RestrictionArgs).Append("\n");
            sb.Append("  RestrictionCode: ").Append(RestrictionCode).Append("\n");
            sb.Append("  SummonerIds: ").Append(SummonerIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolLobbyEligibilityRestriction);
        }

        /// <summary>
        /// Returns true if LolLobbyEligibilityRestriction instances are equal
        /// </summary>
        /// <param name="other">Instance of LolLobbyEligibilityRestriction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolLobbyEligibilityRestriction other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ExpiredTimestamp == other.ExpiredTimestamp ||
                    this.ExpiredTimestamp != null &&
                    this.ExpiredTimestamp.Equals(other.ExpiredTimestamp)
                ) && 
                (
                    this.RestrictionArgs == other.RestrictionArgs ||
                    this.RestrictionArgs != null &&
                    this.RestrictionArgs.SequenceEqual(other.RestrictionArgs)
                ) && 
                (
                    this.RestrictionCode == other.RestrictionCode ||
                    this.RestrictionCode != null &&
                    this.RestrictionCode.Equals(other.RestrictionCode)
                ) && 
                (
                    this.SummonerIds == other.SummonerIds ||
                    this.SummonerIds != null &&
                    this.SummonerIds.SequenceEqual(other.SummonerIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ExpiredTimestamp != null)
                    hash = hash * 59 + this.ExpiredTimestamp.GetHashCode();
                if (this.RestrictionArgs != null)
                    hash = hash * 59 + this.RestrictionArgs.GetHashCode();
                if (this.RestrictionCode != null)
                    hash = hash * 59 + this.RestrictionCode.GetHashCode();
                if (this.SummonerIds != null)
                    hash = hash * 59 + this.SummonerIds.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
