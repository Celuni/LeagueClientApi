/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolLobbyLobbyDto
    /// </summary>
    [DataContract]
    public partial class LolLobbyLobbyDto :  IEquatable<LolLobbyLobbyDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolLobbyLobbyDto" /> class.
        /// </summary>
        /// <param name="CanStartActivity">CanStartActivity.</param>
        /// <param name="ChatRoomId">ChatRoomId.</param>
        /// <param name="ChatRoomKey">ChatRoomKey.</param>
        /// <param name="GameConfig">GameConfig.</param>
        /// <param name="Invitations">Invitations.</param>
        /// <param name="LocalMember">LocalMember.</param>
        /// <param name="Members">Members.</param>
        /// <param name="PartyId">PartyId.</param>
        /// <param name="Restrictions">Restrictions.</param>
        public LolLobbyLobbyDto(bool? CanStartActivity = default(bool?), string ChatRoomId = default(string), string ChatRoomKey = default(string), LolLobbyLobbyGameConfigDto GameConfig = default(LolLobbyLobbyGameConfigDto), List<LolLobbyLobbyInvitationDto> Invitations = default(List<LolLobbyLobbyInvitationDto>), LolLobbyLobbyParticipantDto LocalMember = default(LolLobbyLobbyParticipantDto), List<LolLobbyLobbyParticipantDto> Members = default(List<LolLobbyLobbyParticipantDto>), string PartyId = default(string), List<LolLobbyEligibilityRestriction> Restrictions = default(List<LolLobbyEligibilityRestriction>))
        {
            this.CanStartActivity = CanStartActivity;
            this.ChatRoomId = ChatRoomId;
            this.ChatRoomKey = ChatRoomKey;
            this.GameConfig = GameConfig;
            this.Invitations = Invitations;
            this.LocalMember = LocalMember;
            this.Members = Members;
            this.PartyId = PartyId;
            this.Restrictions = Restrictions;
        }
        
        /// <summary>
        /// Gets or Sets CanStartActivity
        /// </summary>
        [DataMember(Name="canStartActivity", EmitDefaultValue=false)]
        public bool? CanStartActivity { get; set; }

        /// <summary>
        /// Gets or Sets ChatRoomId
        /// </summary>
        [DataMember(Name="chatRoomId", EmitDefaultValue=false)]
        public string ChatRoomId { get; set; }

        /// <summary>
        /// Gets or Sets ChatRoomKey
        /// </summary>
        [DataMember(Name="chatRoomKey", EmitDefaultValue=false)]
        public string ChatRoomKey { get; set; }

        /// <summary>
        /// Gets or Sets GameConfig
        /// </summary>
        [DataMember(Name="gameConfig", EmitDefaultValue=false)]
        public LolLobbyLobbyGameConfigDto GameConfig { get; set; }

        /// <summary>
        /// Gets or Sets Invitations
        /// </summary>
        [DataMember(Name="invitations", EmitDefaultValue=false)]
        public List<LolLobbyLobbyInvitationDto> Invitations { get; set; }

        /// <summary>
        /// Gets or Sets LocalMember
        /// </summary>
        [DataMember(Name="localMember", EmitDefaultValue=false)]
        public LolLobbyLobbyParticipantDto LocalMember { get; set; }

        /// <summary>
        /// Gets or Sets Members
        /// </summary>
        [DataMember(Name="members", EmitDefaultValue=false)]
        public List<LolLobbyLobbyParticipantDto> Members { get; set; }

        /// <summary>
        /// Gets or Sets PartyId
        /// </summary>
        [DataMember(Name="partyId", EmitDefaultValue=false)]
        public string PartyId { get; set; }

        /// <summary>
        /// Gets or Sets Restrictions
        /// </summary>
        [DataMember(Name="restrictions", EmitDefaultValue=false)]
        public List<LolLobbyEligibilityRestriction> Restrictions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolLobbyLobbyDto {\n");
            sb.Append("  CanStartActivity: ").Append(CanStartActivity).Append("\n");
            sb.Append("  ChatRoomId: ").Append(ChatRoomId).Append("\n");
            sb.Append("  ChatRoomKey: ").Append(ChatRoomKey).Append("\n");
            sb.Append("  GameConfig: ").Append(GameConfig).Append("\n");
            sb.Append("  Invitations: ").Append(Invitations).Append("\n");
            sb.Append("  LocalMember: ").Append(LocalMember).Append("\n");
            sb.Append("  Members: ").Append(Members).Append("\n");
            sb.Append("  PartyId: ").Append(PartyId).Append("\n");
            sb.Append("  Restrictions: ").Append(Restrictions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolLobbyLobbyDto);
        }

        /// <summary>
        /// Returns true if LolLobbyLobbyDto instances are equal
        /// </summary>
        /// <param name="other">Instance of LolLobbyLobbyDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolLobbyLobbyDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CanStartActivity == other.CanStartActivity ||
                    this.CanStartActivity != null &&
                    this.CanStartActivity.Equals(other.CanStartActivity)
                ) && 
                (
                    this.ChatRoomId == other.ChatRoomId ||
                    this.ChatRoomId != null &&
                    this.ChatRoomId.Equals(other.ChatRoomId)
                ) && 
                (
                    this.ChatRoomKey == other.ChatRoomKey ||
                    this.ChatRoomKey != null &&
                    this.ChatRoomKey.Equals(other.ChatRoomKey)
                ) && 
                (
                    this.GameConfig == other.GameConfig ||
                    this.GameConfig != null &&
                    this.GameConfig.Equals(other.GameConfig)
                ) && 
                (
                    this.Invitations == other.Invitations ||
                    this.Invitations != null &&
                    this.Invitations.SequenceEqual(other.Invitations)
                ) && 
                (
                    this.LocalMember == other.LocalMember ||
                    this.LocalMember != null &&
                    this.LocalMember.Equals(other.LocalMember)
                ) && 
                (
                    this.Members == other.Members ||
                    this.Members != null &&
                    this.Members.SequenceEqual(other.Members)
                ) && 
                (
                    this.PartyId == other.PartyId ||
                    this.PartyId != null &&
                    this.PartyId.Equals(other.PartyId)
                ) && 
                (
                    this.Restrictions == other.Restrictions ||
                    this.Restrictions != null &&
                    this.Restrictions.SequenceEqual(other.Restrictions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CanStartActivity != null)
                    hash = hash * 59 + this.CanStartActivity.GetHashCode();
                if (this.ChatRoomId != null)
                    hash = hash * 59 + this.ChatRoomId.GetHashCode();
                if (this.ChatRoomKey != null)
                    hash = hash * 59 + this.ChatRoomKey.GetHashCode();
                if (this.GameConfig != null)
                    hash = hash * 59 + this.GameConfig.GetHashCode();
                if (this.Invitations != null)
                    hash = hash * 59 + this.Invitations.GetHashCode();
                if (this.LocalMember != null)
                    hash = hash * 59 + this.LocalMember.GetHashCode();
                if (this.Members != null)
                    hash = hash * 59 + this.Members.GetHashCode();
                if (this.PartyId != null)
                    hash = hash * 59 + this.PartyId.GetHashCode();
                if (this.Restrictions != null)
                    hash = hash * 59 + this.Restrictions.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
