/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolLobbyPartyMemberDto
    /// </summary>
    [DataContract]
    public partial class LolLobbyPartyMemberDto :  IEquatable<LolLobbyPartyMemberDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolLobbyPartyMemberDto" /> class.
        /// </summary>
        /// <param name="AccountId">AccountId.</param>
        /// <param name="CanInvite">CanInvite.</param>
        /// <param name="GameMode">GameMode.</param>
        /// <param name="InviteTimestamp">InviteTimestamp.</param>
        /// <param name="InvitedBySummonerId">InvitedBySummonerId.</param>
        /// <param name="Metadata">Metadata.</param>
        /// <param name="PartyId">PartyId.</param>
        /// <param name="PlatformId">PlatformId.</param>
        /// <param name="Puuid">Puuid.</param>
        /// <param name="Ready">Ready.</param>
        /// <param name="Role">Role.</param>
        /// <param name="SummonerId">SummonerId.</param>
        public LolLobbyPartyMemberDto(long? AccountId = default(long?), bool? CanInvite = default(bool?), LolLobbyGameModeDto GameMode = default(LolLobbyGameModeDto), long? InviteTimestamp = default(long?), long? InvitedBySummonerId = default(long?), LolLobbyPartyMemberMetadataDto Metadata = default(LolLobbyPartyMemberMetadataDto), string PartyId = default(string), string PlatformId = default(string), string Puuid = default(string), bool? Ready = default(bool?), LolLobbyPartyMemberRoleEnum Role = default(LolLobbyPartyMemberRoleEnum), long? SummonerId = default(long?))
        {
            this.AccountId = AccountId;
            this.CanInvite = CanInvite;
            this.GameMode = GameMode;
            this.InviteTimestamp = InviteTimestamp;
            this.InvitedBySummonerId = InvitedBySummonerId;
            this.Metadata = Metadata;
            this.PartyId = PartyId;
            this.PlatformId = PlatformId;
            this.Puuid = Puuid;
            this.Ready = Ready;
            this.Role = Role;
            this.SummonerId = SummonerId;
        }
        
        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [DataMember(Name="accountId", EmitDefaultValue=false)]
        public long? AccountId { get; set; }

        /// <summary>
        /// Gets or Sets CanInvite
        /// </summary>
        [DataMember(Name="canInvite", EmitDefaultValue=false)]
        public bool? CanInvite { get; set; }

        /// <summary>
        /// Gets or Sets GameMode
        /// </summary>
        [DataMember(Name="gameMode", EmitDefaultValue=false)]
        public LolLobbyGameModeDto GameMode { get; set; }

        /// <summary>
        /// Gets or Sets InviteTimestamp
        /// </summary>
        [DataMember(Name="inviteTimestamp", EmitDefaultValue=false)]
        public long? InviteTimestamp { get; set; }

        /// <summary>
        /// Gets or Sets InvitedBySummonerId
        /// </summary>
        [DataMember(Name="invitedBySummonerId", EmitDefaultValue=false)]
        public long? InvitedBySummonerId { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public LolLobbyPartyMemberMetadataDto Metadata { get; set; }

        /// <summary>
        /// Gets or Sets PartyId
        /// </summary>
        [DataMember(Name="partyId", EmitDefaultValue=false)]
        public string PartyId { get; set; }

        /// <summary>
        /// Gets or Sets PlatformId
        /// </summary>
        [DataMember(Name="platformId", EmitDefaultValue=false)]
        public string PlatformId { get; set; }

        /// <summary>
        /// Gets or Sets Puuid
        /// </summary>
        [DataMember(Name="puuid", EmitDefaultValue=false)]
        public string Puuid { get; set; }

        /// <summary>
        /// Gets or Sets Ready
        /// </summary>
        [DataMember(Name="ready", EmitDefaultValue=false)]
        public bool? Ready { get; set; }

        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [DataMember(Name="role", EmitDefaultValue=false)]
        public LolLobbyPartyMemberRoleEnum Role { get; set; }

        /// <summary>
        /// Gets or Sets SummonerId
        /// </summary>
        [DataMember(Name="summonerId", EmitDefaultValue=false)]
        public long? SummonerId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolLobbyPartyMemberDto {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  CanInvite: ").Append(CanInvite).Append("\n");
            sb.Append("  GameMode: ").Append(GameMode).Append("\n");
            sb.Append("  InviteTimestamp: ").Append(InviteTimestamp).Append("\n");
            sb.Append("  InvitedBySummonerId: ").Append(InvitedBySummonerId).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  PartyId: ").Append(PartyId).Append("\n");
            sb.Append("  PlatformId: ").Append(PlatformId).Append("\n");
            sb.Append("  Puuid: ").Append(Puuid).Append("\n");
            sb.Append("  Ready: ").Append(Ready).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  SummonerId: ").Append(SummonerId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolLobbyPartyMemberDto);
        }

        /// <summary>
        /// Returns true if LolLobbyPartyMemberDto instances are equal
        /// </summary>
        /// <param name="other">Instance of LolLobbyPartyMemberDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolLobbyPartyMemberDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AccountId == other.AccountId ||
                    this.AccountId != null &&
                    this.AccountId.Equals(other.AccountId)
                ) && 
                (
                    this.CanInvite == other.CanInvite ||
                    this.CanInvite != null &&
                    this.CanInvite.Equals(other.CanInvite)
                ) && 
                (
                    this.GameMode == other.GameMode ||
                    this.GameMode != null &&
                    this.GameMode.Equals(other.GameMode)
                ) && 
                (
                    this.InviteTimestamp == other.InviteTimestamp ||
                    this.InviteTimestamp != null &&
                    this.InviteTimestamp.Equals(other.InviteTimestamp)
                ) && 
                (
                    this.InvitedBySummonerId == other.InvitedBySummonerId ||
                    this.InvitedBySummonerId != null &&
                    this.InvitedBySummonerId.Equals(other.InvitedBySummonerId)
                ) && 
                (
                    this.Metadata == other.Metadata ||
                    this.Metadata != null &&
                    this.Metadata.Equals(other.Metadata)
                ) && 
                (
                    this.PartyId == other.PartyId ||
                    this.PartyId != null &&
                    this.PartyId.Equals(other.PartyId)
                ) && 
                (
                    this.PlatformId == other.PlatformId ||
                    this.PlatformId != null &&
                    this.PlatformId.Equals(other.PlatformId)
                ) && 
                (
                    this.Puuid == other.Puuid ||
                    this.Puuid != null &&
                    this.Puuid.Equals(other.Puuid)
                ) && 
                (
                    this.Ready == other.Ready ||
                    this.Ready != null &&
                    this.Ready.Equals(other.Ready)
                ) && 
                (
                    this.Role == other.Role ||
                    this.Role != null &&
                    this.Role.Equals(other.Role)
                ) && 
                (
                    this.SummonerId == other.SummonerId ||
                    this.SummonerId != null &&
                    this.SummonerId.Equals(other.SummonerId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AccountId != null)
                    hash = hash * 59 + this.AccountId.GetHashCode();
                if (this.CanInvite != null)
                    hash = hash * 59 + this.CanInvite.GetHashCode();
                if (this.GameMode != null)
                    hash = hash * 59 + this.GameMode.GetHashCode();
                if (this.InviteTimestamp != null)
                    hash = hash * 59 + this.InviteTimestamp.GetHashCode();
                if (this.InvitedBySummonerId != null)
                    hash = hash * 59 + this.InvitedBySummonerId.GetHashCode();
                if (this.Metadata != null)
                    hash = hash * 59 + this.Metadata.GetHashCode();
                if (this.PartyId != null)
                    hash = hash * 59 + this.PartyId.GetHashCode();
                if (this.PlatformId != null)
                    hash = hash * 59 + this.PlatformId.GetHashCode();
                if (this.Puuid != null)
                    hash = hash * 59 + this.Puuid.GetHashCode();
                if (this.Ready != null)
                    hash = hash * 59 + this.Ready.GetHashCode();
                if (this.Role != null)
                    hash = hash * 59 + this.Role.GetHashCode();
                if (this.SummonerId != null)
                    hash = hash * 59 + this.SummonerId.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
