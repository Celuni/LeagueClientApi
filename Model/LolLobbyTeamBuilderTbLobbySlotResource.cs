/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolLobbyTeamBuilderTbLobbySlotResource
    /// </summary>
    [DataContract]
    public partial class LolLobbyTeamBuilderTbLobbySlotResource :  IEquatable<LolLobbyTeamBuilderTbLobbySlotResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolLobbyTeamBuilderTbLobbySlotResource" /> class.
        /// </summary>
        /// <param name="AutoFillEligible">AutoFillEligible.</param>
        /// <param name="AutoFillProtectedForPromos">AutoFillProtectedForPromos.</param>
        /// <param name="AutoFillProtectedForSoloing">AutoFillProtectedForSoloing.</param>
        /// <param name="AutoFillProtectedForStreaking">AutoFillProtectedForStreaking.</param>
        /// <param name="DraftPositionPreferences">DraftPositionPreferences.</param>
        /// <param name="ExcludedPositionPreference">ExcludedPositionPreference.</param>
        /// <param name="ShowPositionExcluder">ShowPositionExcluder.</param>
        /// <param name="SlotId">SlotId.</param>
        /// <param name="SummonerId">SummonerId.</param>
        /// <param name="SummonerName">SummonerName.</param>
        public LolLobbyTeamBuilderTbLobbySlotResource(bool? AutoFillEligible = default(bool?), bool? AutoFillProtectedForPromos = default(bool?), bool? AutoFillProtectedForSoloing = default(bool?), bool? AutoFillProtectedForStreaking = default(bool?), List<string> DraftPositionPreferences = default(List<string>), string ExcludedPositionPreference = default(string), bool? ShowPositionExcluder = default(bool?), int? SlotId = default(int?), long? SummonerId = default(long?), string SummonerName = default(string))
        {
            this.AutoFillEligible = AutoFillEligible;
            this.AutoFillProtectedForPromos = AutoFillProtectedForPromos;
            this.AutoFillProtectedForSoloing = AutoFillProtectedForSoloing;
            this.AutoFillProtectedForStreaking = AutoFillProtectedForStreaking;
            this.DraftPositionPreferences = DraftPositionPreferences;
            this.ExcludedPositionPreference = ExcludedPositionPreference;
            this.ShowPositionExcluder = ShowPositionExcluder;
            this.SlotId = SlotId;
            this.SummonerId = SummonerId;
            this.SummonerName = SummonerName;
        }
        
        /// <summary>
        /// Gets or Sets AutoFillEligible
        /// </summary>
        [DataMember(Name="autoFillEligible", EmitDefaultValue=false)]
        public bool? AutoFillEligible { get; set; }

        /// <summary>
        /// Gets or Sets AutoFillProtectedForPromos
        /// </summary>
        [DataMember(Name="autoFillProtectedForPromos", EmitDefaultValue=false)]
        public bool? AutoFillProtectedForPromos { get; set; }

        /// <summary>
        /// Gets or Sets AutoFillProtectedForSoloing
        /// </summary>
        [DataMember(Name="autoFillProtectedForSoloing", EmitDefaultValue=false)]
        public bool? AutoFillProtectedForSoloing { get; set; }

        /// <summary>
        /// Gets or Sets AutoFillProtectedForStreaking
        /// </summary>
        [DataMember(Name="autoFillProtectedForStreaking", EmitDefaultValue=false)]
        public bool? AutoFillProtectedForStreaking { get; set; }

        /// <summary>
        /// Gets or Sets DraftPositionPreferences
        /// </summary>
        [DataMember(Name="draftPositionPreferences", EmitDefaultValue=false)]
        public List<string> DraftPositionPreferences { get; set; }

        /// <summary>
        /// Gets or Sets ExcludedPositionPreference
        /// </summary>
        [DataMember(Name="excludedPositionPreference", EmitDefaultValue=false)]
        public string ExcludedPositionPreference { get; set; }

        /// <summary>
        /// Gets or Sets ShowPositionExcluder
        /// </summary>
        [DataMember(Name="showPositionExcluder", EmitDefaultValue=false)]
        public bool? ShowPositionExcluder { get; set; }

        /// <summary>
        /// Gets or Sets SlotId
        /// </summary>
        [DataMember(Name="slotId", EmitDefaultValue=false)]
        public int? SlotId { get; set; }

        /// <summary>
        /// Gets or Sets SummonerId
        /// </summary>
        [DataMember(Name="summonerId", EmitDefaultValue=false)]
        public long? SummonerId { get; set; }

        /// <summary>
        /// Gets or Sets SummonerName
        /// </summary>
        [DataMember(Name="summonerName", EmitDefaultValue=false)]
        public string SummonerName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolLobbyTeamBuilderTbLobbySlotResource {\n");
            sb.Append("  AutoFillEligible: ").Append(AutoFillEligible).Append("\n");
            sb.Append("  AutoFillProtectedForPromos: ").Append(AutoFillProtectedForPromos).Append("\n");
            sb.Append("  AutoFillProtectedForSoloing: ").Append(AutoFillProtectedForSoloing).Append("\n");
            sb.Append("  AutoFillProtectedForStreaking: ").Append(AutoFillProtectedForStreaking).Append("\n");
            sb.Append("  DraftPositionPreferences: ").Append(DraftPositionPreferences).Append("\n");
            sb.Append("  ExcludedPositionPreference: ").Append(ExcludedPositionPreference).Append("\n");
            sb.Append("  ShowPositionExcluder: ").Append(ShowPositionExcluder).Append("\n");
            sb.Append("  SlotId: ").Append(SlotId).Append("\n");
            sb.Append("  SummonerId: ").Append(SummonerId).Append("\n");
            sb.Append("  SummonerName: ").Append(SummonerName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolLobbyTeamBuilderTbLobbySlotResource);
        }

        /// <summary>
        /// Returns true if LolLobbyTeamBuilderTbLobbySlotResource instances are equal
        /// </summary>
        /// <param name="other">Instance of LolLobbyTeamBuilderTbLobbySlotResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolLobbyTeamBuilderTbLobbySlotResource other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AutoFillEligible == other.AutoFillEligible ||
                    this.AutoFillEligible != null &&
                    this.AutoFillEligible.Equals(other.AutoFillEligible)
                ) && 
                (
                    this.AutoFillProtectedForPromos == other.AutoFillProtectedForPromos ||
                    this.AutoFillProtectedForPromos != null &&
                    this.AutoFillProtectedForPromos.Equals(other.AutoFillProtectedForPromos)
                ) && 
                (
                    this.AutoFillProtectedForSoloing == other.AutoFillProtectedForSoloing ||
                    this.AutoFillProtectedForSoloing != null &&
                    this.AutoFillProtectedForSoloing.Equals(other.AutoFillProtectedForSoloing)
                ) && 
                (
                    this.AutoFillProtectedForStreaking == other.AutoFillProtectedForStreaking ||
                    this.AutoFillProtectedForStreaking != null &&
                    this.AutoFillProtectedForStreaking.Equals(other.AutoFillProtectedForStreaking)
                ) && 
                (
                    this.DraftPositionPreferences == other.DraftPositionPreferences ||
                    this.DraftPositionPreferences != null &&
                    this.DraftPositionPreferences.SequenceEqual(other.DraftPositionPreferences)
                ) && 
                (
                    this.ExcludedPositionPreference == other.ExcludedPositionPreference ||
                    this.ExcludedPositionPreference != null &&
                    this.ExcludedPositionPreference.Equals(other.ExcludedPositionPreference)
                ) && 
                (
                    this.ShowPositionExcluder == other.ShowPositionExcluder ||
                    this.ShowPositionExcluder != null &&
                    this.ShowPositionExcluder.Equals(other.ShowPositionExcluder)
                ) && 
                (
                    this.SlotId == other.SlotId ||
                    this.SlotId != null &&
                    this.SlotId.Equals(other.SlotId)
                ) && 
                (
                    this.SummonerId == other.SummonerId ||
                    this.SummonerId != null &&
                    this.SummonerId.Equals(other.SummonerId)
                ) && 
                (
                    this.SummonerName == other.SummonerName ||
                    this.SummonerName != null &&
                    this.SummonerName.Equals(other.SummonerName)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AutoFillEligible != null)
                    hash = hash * 59 + this.AutoFillEligible.GetHashCode();
                if (this.AutoFillProtectedForPromos != null)
                    hash = hash * 59 + this.AutoFillProtectedForPromos.GetHashCode();
                if (this.AutoFillProtectedForSoloing != null)
                    hash = hash * 59 + this.AutoFillProtectedForSoloing.GetHashCode();
                if (this.AutoFillProtectedForStreaking != null)
                    hash = hash * 59 + this.AutoFillProtectedForStreaking.GetHashCode();
                if (this.DraftPositionPreferences != null)
                    hash = hash * 59 + this.DraftPositionPreferences.GetHashCode();
                if (this.ExcludedPositionPreference != null)
                    hash = hash * 59 + this.ExcludedPositionPreference.GetHashCode();
                if (this.ShowPositionExcluder != null)
                    hash = hash * 59 + this.ShowPositionExcluder.GetHashCode();
                if (this.SlotId != null)
                    hash = hash * 59 + this.SlotId.GetHashCode();
                if (this.SummonerId != null)
                    hash = hash * 59 + this.SummonerId.GetHashCode();
                if (this.SummonerName != null)
                    hash = hash * 59 + this.SummonerName.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
