/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolLoginLcdsServiceProxyResponse
    /// </summary>
    [DataContract]
    public partial class LolLoginLcdsServiceProxyResponse :  IEquatable<LolLoginLcdsServiceProxyResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolLoginLcdsServiceProxyResponse" /> class.
        /// </summary>
        /// <param name="CompressedPayload">CompressedPayload.</param>
        /// <param name="MessageId">MessageId.</param>
        /// <param name="MethodName">MethodName.</param>
        /// <param name="Payload">Payload.</param>
        /// <param name="ServiceName">ServiceName.</param>
        /// <param name="Status">Status.</param>
        public LolLoginLcdsServiceProxyResponse(bool? CompressedPayload = default(bool?), string MessageId = default(string), string MethodName = default(string), string Payload = default(string), string ServiceName = default(string), string Status = default(string))
        {
            this.CompressedPayload = CompressedPayload;
            this.MessageId = MessageId;
            this.MethodName = MethodName;
            this.Payload = Payload;
            this.ServiceName = ServiceName;
            this.Status = Status;
        }
        
        /// <summary>
        /// Gets or Sets CompressedPayload
        /// </summary>
        [DataMember(Name="compressedPayload", EmitDefaultValue=false)]
        public bool? CompressedPayload { get; set; }

        /// <summary>
        /// Gets or Sets MessageId
        /// </summary>
        [DataMember(Name="messageId", EmitDefaultValue=false)]
        public string MessageId { get; set; }

        /// <summary>
        /// Gets or Sets MethodName
        /// </summary>
        [DataMember(Name="methodName", EmitDefaultValue=false)]
        public string MethodName { get; set; }

        /// <summary>
        /// Gets or Sets Payload
        /// </summary>
        [DataMember(Name="payload", EmitDefaultValue=false)]
        public string Payload { get; set; }

        /// <summary>
        /// Gets or Sets ServiceName
        /// </summary>
        [DataMember(Name="serviceName", EmitDefaultValue=false)]
        public string ServiceName { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolLoginLcdsServiceProxyResponse {\n");
            sb.Append("  CompressedPayload: ").Append(CompressedPayload).Append("\n");
            sb.Append("  MessageId: ").Append(MessageId).Append("\n");
            sb.Append("  MethodName: ").Append(MethodName).Append("\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("  ServiceName: ").Append(ServiceName).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolLoginLcdsServiceProxyResponse);
        }

        /// <summary>
        /// Returns true if LolLoginLcdsServiceProxyResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of LolLoginLcdsServiceProxyResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolLoginLcdsServiceProxyResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CompressedPayload == other.CompressedPayload ||
                    this.CompressedPayload != null &&
                    this.CompressedPayload.Equals(other.CompressedPayload)
                ) && 
                (
                    this.MessageId == other.MessageId ||
                    this.MessageId != null &&
                    this.MessageId.Equals(other.MessageId)
                ) && 
                (
                    this.MethodName == other.MethodName ||
                    this.MethodName != null &&
                    this.MethodName.Equals(other.MethodName)
                ) && 
                (
                    this.Payload == other.Payload ||
                    this.Payload != null &&
                    this.Payload.Equals(other.Payload)
                ) && 
                (
                    this.ServiceName == other.ServiceName ||
                    this.ServiceName != null &&
                    this.ServiceName.Equals(other.ServiceName)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CompressedPayload != null)
                    hash = hash * 59 + this.CompressedPayload.GetHashCode();
                if (this.MessageId != null)
                    hash = hash * 59 + this.MessageId.GetHashCode();
                if (this.MethodName != null)
                    hash = hash * 59 + this.MethodName.GetHashCode();
                if (this.Payload != null)
                    hash = hash * 59 + this.Payload.GetHashCode();
                if (this.ServiceName != null)
                    hash = hash * 59 + this.ServiceName.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
