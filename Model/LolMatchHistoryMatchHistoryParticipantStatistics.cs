/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolMatchHistoryMatchHistoryParticipantStatistics
    /// </summary>
    [DataContract]
    public partial class LolMatchHistoryMatchHistoryParticipantStatistics :  IEquatable<LolMatchHistoryMatchHistoryParticipantStatistics>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolMatchHistoryMatchHistoryParticipantStatistics" /> class.
        /// </summary>
        /// <param name="Assists">Assists.</param>
        /// <param name="CausedEarlySurrender">CausedEarlySurrender.</param>
        /// <param name="ChampLevel">ChampLevel.</param>
        /// <param name="CombatPlayerScore">CombatPlayerScore.</param>
        /// <param name="DamageDealtToObjectives">DamageDealtToObjectives.</param>
        /// <param name="DamageDealtToTurrets">DamageDealtToTurrets.</param>
        /// <param name="DamageSelfMitigated">DamageSelfMitigated.</param>
        /// <param name="Deaths">Deaths.</param>
        /// <param name="DoubleKills">DoubleKills.</param>
        /// <param name="EarlySurrenderAccomplice">EarlySurrenderAccomplice.</param>
        /// <param name="FirstBloodAssist">FirstBloodAssist.</param>
        /// <param name="FirstBloodKill">FirstBloodKill.</param>
        /// <param name="FirstInhibitorAssist">FirstInhibitorAssist.</param>
        /// <param name="FirstInhibitorKill">FirstInhibitorKill.</param>
        /// <param name="FirstTowerAssist">FirstTowerAssist.</param>
        /// <param name="FirstTowerKill">FirstTowerKill.</param>
        /// <param name="GameEndedInEarlySurrender">GameEndedInEarlySurrender.</param>
        /// <param name="GameEndedInSurrender">GameEndedInSurrender.</param>
        /// <param name="GoldEarned">GoldEarned.</param>
        /// <param name="GoldSpent">GoldSpent.</param>
        /// <param name="InhibitorKills">InhibitorKills.</param>
        /// <param name="Item0">Item0.</param>
        /// <param name="Item1">Item1.</param>
        /// <param name="Item2">Item2.</param>
        /// <param name="Item3">Item3.</param>
        /// <param name="Item4">Item4.</param>
        /// <param name="Item5">Item5.</param>
        /// <param name="Item6">Item6.</param>
        /// <param name="KillingSprees">KillingSprees.</param>
        /// <param name="Kills">Kills.</param>
        /// <param name="LargestCriticalStrike">LargestCriticalStrike.</param>
        /// <param name="LargestKillingSpree">LargestKillingSpree.</param>
        /// <param name="LargestMultiKill">LargestMultiKill.</param>
        /// <param name="LongestTimeSpentLiving">LongestTimeSpentLiving.</param>
        /// <param name="MagicDamageDealt">MagicDamageDealt.</param>
        /// <param name="MagicDamageDealtToChampions">MagicDamageDealtToChampions.</param>
        /// <param name="MagicalDamageTaken">MagicalDamageTaken.</param>
        /// <param name="NeutralMinionsKilled">NeutralMinionsKilled.</param>
        /// <param name="NeutralMinionsKilledEnemyJungle">NeutralMinionsKilledEnemyJungle.</param>
        /// <param name="NeutralMinionsKilledTeamJungle">NeutralMinionsKilledTeamJungle.</param>
        /// <param name="ObjectivePlayerScore">ObjectivePlayerScore.</param>
        /// <param name="ParticipantId">ParticipantId.</param>
        /// <param name="PentaKills">PentaKills.</param>
        /// <param name="Perk0">Perk0.</param>
        /// <param name="Perk0Var1">Perk0Var1.</param>
        /// <param name="Perk0Var2">Perk0Var2.</param>
        /// <param name="Perk0Var3">Perk0Var3.</param>
        /// <param name="Perk1">Perk1.</param>
        /// <param name="Perk1Var1">Perk1Var1.</param>
        /// <param name="Perk1Var2">Perk1Var2.</param>
        /// <param name="Perk1Var3">Perk1Var3.</param>
        /// <param name="Perk2">Perk2.</param>
        /// <param name="Perk2Var1">Perk2Var1.</param>
        /// <param name="Perk2Var2">Perk2Var2.</param>
        /// <param name="Perk2Var3">Perk2Var3.</param>
        /// <param name="Perk3">Perk3.</param>
        /// <param name="Perk3Var1">Perk3Var1.</param>
        /// <param name="Perk3Var2">Perk3Var2.</param>
        /// <param name="Perk3Var3">Perk3Var3.</param>
        /// <param name="Perk4">Perk4.</param>
        /// <param name="Perk4Var1">Perk4Var1.</param>
        /// <param name="Perk4Var2">Perk4Var2.</param>
        /// <param name="Perk4Var3">Perk4Var3.</param>
        /// <param name="Perk5">Perk5.</param>
        /// <param name="Perk5Var1">Perk5Var1.</param>
        /// <param name="Perk5Var2">Perk5Var2.</param>
        /// <param name="Perk5Var3">Perk5Var3.</param>
        /// <param name="PerkPrimaryStyle">PerkPrimaryStyle.</param>
        /// <param name="PerkSubStyle">PerkSubStyle.</param>
        /// <param name="PhysicalDamageDealt">PhysicalDamageDealt.</param>
        /// <param name="PhysicalDamageDealtToChampions">PhysicalDamageDealtToChampions.</param>
        /// <param name="PhysicalDamageTaken">PhysicalDamageTaken.</param>
        /// <param name="PlayerScore0">PlayerScore0.</param>
        /// <param name="PlayerScore1">PlayerScore1.</param>
        /// <param name="PlayerScore2">PlayerScore2.</param>
        /// <param name="PlayerScore3">PlayerScore3.</param>
        /// <param name="PlayerScore4">PlayerScore4.</param>
        /// <param name="PlayerScore5">PlayerScore5.</param>
        /// <param name="PlayerScore6">PlayerScore6.</param>
        /// <param name="PlayerScore7">PlayerScore7.</param>
        /// <param name="PlayerScore8">PlayerScore8.</param>
        /// <param name="PlayerScore9">PlayerScore9.</param>
        /// <param name="QuadraKills">QuadraKills.</param>
        /// <param name="SightWardsBoughtInGame">SightWardsBoughtInGame.</param>
        /// <param name="TeamEarlySurrendered">TeamEarlySurrendered.</param>
        /// <param name="TimeCCingOthers">TimeCCingOthers.</param>
        /// <param name="TotalDamageDealt">TotalDamageDealt.</param>
        /// <param name="TotalDamageDealtToChampions">TotalDamageDealtToChampions.</param>
        /// <param name="TotalDamageTaken">TotalDamageTaken.</param>
        /// <param name="TotalHeal">TotalHeal.</param>
        /// <param name="TotalMinionsKilled">TotalMinionsKilled.</param>
        /// <param name="TotalPlayerScore">TotalPlayerScore.</param>
        /// <param name="TotalScoreRank">TotalScoreRank.</param>
        /// <param name="TotalTimeCrowdControlDealt">TotalTimeCrowdControlDealt.</param>
        /// <param name="TotalUnitsHealed">TotalUnitsHealed.</param>
        /// <param name="TripleKills">TripleKills.</param>
        /// <param name="TrueDamageDealt">TrueDamageDealt.</param>
        /// <param name="TrueDamageDealtToChampions">TrueDamageDealtToChampions.</param>
        /// <param name="TrueDamageTaken">TrueDamageTaken.</param>
        /// <param name="TurretKills">TurretKills.</param>
        /// <param name="UnrealKills">UnrealKills.</param>
        /// <param name="VisionScore">VisionScore.</param>
        /// <param name="VisionWardsBoughtInGame">VisionWardsBoughtInGame.</param>
        /// <param name="WardsKilled">WardsKilled.</param>
        /// <param name="WardsPlaced">WardsPlaced.</param>
        /// <param name="Win">Win.</param>
        public LolMatchHistoryMatchHistoryParticipantStatistics(long? Assists = default(long?), bool? CausedEarlySurrender = default(bool?), long? ChampLevel = default(long?), long? CombatPlayerScore = default(long?), long? DamageDealtToObjectives = default(long?), long? DamageDealtToTurrets = default(long?), long? DamageSelfMitigated = default(long?), long? Deaths = default(long?), long? DoubleKills = default(long?), bool? EarlySurrenderAccomplice = default(bool?), bool? FirstBloodAssist = default(bool?), bool? FirstBloodKill = default(bool?), bool? FirstInhibitorAssist = default(bool?), bool? FirstInhibitorKill = default(bool?), bool? FirstTowerAssist = default(bool?), bool? FirstTowerKill = default(bool?), bool? GameEndedInEarlySurrender = default(bool?), bool? GameEndedInSurrender = default(bool?), long? GoldEarned = default(long?), long? GoldSpent = default(long?), long? InhibitorKills = default(long?), int? Item0 = default(int?), int? Item1 = default(int?), int? Item2 = default(int?), int? Item3 = default(int?), int? Item4 = default(int?), int? Item5 = default(int?), int? Item6 = default(int?), long? KillingSprees = default(long?), long? Kills = default(long?), long? LargestCriticalStrike = default(long?), long? LargestKillingSpree = default(long?), long? LargestMultiKill = default(long?), long? LongestTimeSpentLiving = default(long?), long? MagicDamageDealt = default(long?), long? MagicDamageDealtToChampions = default(long?), long? MagicalDamageTaken = default(long?), long? NeutralMinionsKilled = default(long?), long? NeutralMinionsKilledEnemyJungle = default(long?), long? NeutralMinionsKilledTeamJungle = default(long?), long? ObjectivePlayerScore = default(long?), int? ParticipantId = default(int?), long? PentaKills = default(long?), long? Perk0 = default(long?), long? Perk0Var1 = default(long?), long? Perk0Var2 = default(long?), long? Perk0Var3 = default(long?), long? Perk1 = default(long?), long? Perk1Var1 = default(long?), long? Perk1Var2 = default(long?), long? Perk1Var3 = default(long?), long? Perk2 = default(long?), long? Perk2Var1 = default(long?), long? Perk2Var2 = default(long?), long? Perk2Var3 = default(long?), long? Perk3 = default(long?), long? Perk3Var1 = default(long?), long? Perk3Var2 = default(long?), long? Perk3Var3 = default(long?), long? Perk4 = default(long?), long? Perk4Var1 = default(long?), long? Perk4Var2 = default(long?), long? Perk4Var3 = default(long?), long? Perk5 = default(long?), long? Perk5Var1 = default(long?), long? Perk5Var2 = default(long?), long? Perk5Var3 = default(long?), long? PerkPrimaryStyle = default(long?), long? PerkSubStyle = default(long?), long? PhysicalDamageDealt = default(long?), long? PhysicalDamageDealtToChampions = default(long?), long? PhysicalDamageTaken = default(long?), long? PlayerScore0 = default(long?), long? PlayerScore1 = default(long?), long? PlayerScore2 = default(long?), long? PlayerScore3 = default(long?), long? PlayerScore4 = default(long?), long? PlayerScore5 = default(long?), long? PlayerScore6 = default(long?), long? PlayerScore7 = default(long?), long? PlayerScore8 = default(long?), long? PlayerScore9 = default(long?), long? QuadraKills = default(long?), long? SightWardsBoughtInGame = default(long?), bool? TeamEarlySurrendered = default(bool?), long? TimeCCingOthers = default(long?), long? TotalDamageDealt = default(long?), long? TotalDamageDealtToChampions = default(long?), long? TotalDamageTaken = default(long?), long? TotalHeal = default(long?), long? TotalMinionsKilled = default(long?), long? TotalPlayerScore = default(long?), long? TotalScoreRank = default(long?), long? TotalTimeCrowdControlDealt = default(long?), long? TotalUnitsHealed = default(long?), long? TripleKills = default(long?), long? TrueDamageDealt = default(long?), long? TrueDamageDealtToChampions = default(long?), long? TrueDamageTaken = default(long?), long? TurretKills = default(long?), long? UnrealKills = default(long?), long? VisionScore = default(long?), long? VisionWardsBoughtInGame = default(long?), long? WardsKilled = default(long?), long? WardsPlaced = default(long?), bool? Win = default(bool?))
        {
            this.Assists = Assists;
            this.CausedEarlySurrender = CausedEarlySurrender;
            this.ChampLevel = ChampLevel;
            this.CombatPlayerScore = CombatPlayerScore;
            this.DamageDealtToObjectives = DamageDealtToObjectives;
            this.DamageDealtToTurrets = DamageDealtToTurrets;
            this.DamageSelfMitigated = DamageSelfMitigated;
            this.Deaths = Deaths;
            this.DoubleKills = DoubleKills;
            this.EarlySurrenderAccomplice = EarlySurrenderAccomplice;
            this.FirstBloodAssist = FirstBloodAssist;
            this.FirstBloodKill = FirstBloodKill;
            this.FirstInhibitorAssist = FirstInhibitorAssist;
            this.FirstInhibitorKill = FirstInhibitorKill;
            this.FirstTowerAssist = FirstTowerAssist;
            this.FirstTowerKill = FirstTowerKill;
            this.GameEndedInEarlySurrender = GameEndedInEarlySurrender;
            this.GameEndedInSurrender = GameEndedInSurrender;
            this.GoldEarned = GoldEarned;
            this.GoldSpent = GoldSpent;
            this.InhibitorKills = InhibitorKills;
            this.Item0 = Item0;
            this.Item1 = Item1;
            this.Item2 = Item2;
            this.Item3 = Item3;
            this.Item4 = Item4;
            this.Item5 = Item5;
            this.Item6 = Item6;
            this.KillingSprees = KillingSprees;
            this.Kills = Kills;
            this.LargestCriticalStrike = LargestCriticalStrike;
            this.LargestKillingSpree = LargestKillingSpree;
            this.LargestMultiKill = LargestMultiKill;
            this.LongestTimeSpentLiving = LongestTimeSpentLiving;
            this.MagicDamageDealt = MagicDamageDealt;
            this.MagicDamageDealtToChampions = MagicDamageDealtToChampions;
            this.MagicalDamageTaken = MagicalDamageTaken;
            this.NeutralMinionsKilled = NeutralMinionsKilled;
            this.NeutralMinionsKilledEnemyJungle = NeutralMinionsKilledEnemyJungle;
            this.NeutralMinionsKilledTeamJungle = NeutralMinionsKilledTeamJungle;
            this.ObjectivePlayerScore = ObjectivePlayerScore;
            this.ParticipantId = ParticipantId;
            this.PentaKills = PentaKills;
            this.Perk0 = Perk0;
            this.Perk0Var1 = Perk0Var1;
            this.Perk0Var2 = Perk0Var2;
            this.Perk0Var3 = Perk0Var3;
            this.Perk1 = Perk1;
            this.Perk1Var1 = Perk1Var1;
            this.Perk1Var2 = Perk1Var2;
            this.Perk1Var3 = Perk1Var3;
            this.Perk2 = Perk2;
            this.Perk2Var1 = Perk2Var1;
            this.Perk2Var2 = Perk2Var2;
            this.Perk2Var3 = Perk2Var3;
            this.Perk3 = Perk3;
            this.Perk3Var1 = Perk3Var1;
            this.Perk3Var2 = Perk3Var2;
            this.Perk3Var3 = Perk3Var3;
            this.Perk4 = Perk4;
            this.Perk4Var1 = Perk4Var1;
            this.Perk4Var2 = Perk4Var2;
            this.Perk4Var3 = Perk4Var3;
            this.Perk5 = Perk5;
            this.Perk5Var1 = Perk5Var1;
            this.Perk5Var2 = Perk5Var2;
            this.Perk5Var3 = Perk5Var3;
            this.PerkPrimaryStyle = PerkPrimaryStyle;
            this.PerkSubStyle = PerkSubStyle;
            this.PhysicalDamageDealt = PhysicalDamageDealt;
            this.PhysicalDamageDealtToChampions = PhysicalDamageDealtToChampions;
            this.PhysicalDamageTaken = PhysicalDamageTaken;
            this.PlayerScore0 = PlayerScore0;
            this.PlayerScore1 = PlayerScore1;
            this.PlayerScore2 = PlayerScore2;
            this.PlayerScore3 = PlayerScore3;
            this.PlayerScore4 = PlayerScore4;
            this.PlayerScore5 = PlayerScore5;
            this.PlayerScore6 = PlayerScore6;
            this.PlayerScore7 = PlayerScore7;
            this.PlayerScore8 = PlayerScore8;
            this.PlayerScore9 = PlayerScore9;
            this.QuadraKills = QuadraKills;
            this.SightWardsBoughtInGame = SightWardsBoughtInGame;
            this.TeamEarlySurrendered = TeamEarlySurrendered;
            this.TimeCCingOthers = TimeCCingOthers;
            this.TotalDamageDealt = TotalDamageDealt;
            this.TotalDamageDealtToChampions = TotalDamageDealtToChampions;
            this.TotalDamageTaken = TotalDamageTaken;
            this.TotalHeal = TotalHeal;
            this.TotalMinionsKilled = TotalMinionsKilled;
            this.TotalPlayerScore = TotalPlayerScore;
            this.TotalScoreRank = TotalScoreRank;
            this.TotalTimeCrowdControlDealt = TotalTimeCrowdControlDealt;
            this.TotalUnitsHealed = TotalUnitsHealed;
            this.TripleKills = TripleKills;
            this.TrueDamageDealt = TrueDamageDealt;
            this.TrueDamageDealtToChampions = TrueDamageDealtToChampions;
            this.TrueDamageTaken = TrueDamageTaken;
            this.TurretKills = TurretKills;
            this.UnrealKills = UnrealKills;
            this.VisionScore = VisionScore;
            this.VisionWardsBoughtInGame = VisionWardsBoughtInGame;
            this.WardsKilled = WardsKilled;
            this.WardsPlaced = WardsPlaced;
            this.Win = Win;
        }
        
        /// <summary>
        /// Gets or Sets Assists
        /// </summary>
        [DataMember(Name="assists", EmitDefaultValue=false)]
        public long? Assists { get; set; }

        /// <summary>
        /// Gets or Sets CausedEarlySurrender
        /// </summary>
        [DataMember(Name="causedEarlySurrender", EmitDefaultValue=false)]
        public bool? CausedEarlySurrender { get; set; }

        /// <summary>
        /// Gets or Sets ChampLevel
        /// </summary>
        [DataMember(Name="champLevel", EmitDefaultValue=false)]
        public long? ChampLevel { get; set; }

        /// <summary>
        /// Gets or Sets CombatPlayerScore
        /// </summary>
        [DataMember(Name="combatPlayerScore", EmitDefaultValue=false)]
        public long? CombatPlayerScore { get; set; }

        /// <summary>
        /// Gets or Sets DamageDealtToObjectives
        /// </summary>
        [DataMember(Name="damageDealtToObjectives", EmitDefaultValue=false)]
        public long? DamageDealtToObjectives { get; set; }

        /// <summary>
        /// Gets or Sets DamageDealtToTurrets
        /// </summary>
        [DataMember(Name="damageDealtToTurrets", EmitDefaultValue=false)]
        public long? DamageDealtToTurrets { get; set; }

        /// <summary>
        /// Gets or Sets DamageSelfMitigated
        /// </summary>
        [DataMember(Name="damageSelfMitigated", EmitDefaultValue=false)]
        public long? DamageSelfMitigated { get; set; }

        /// <summary>
        /// Gets or Sets Deaths
        /// </summary>
        [DataMember(Name="deaths", EmitDefaultValue=false)]
        public long? Deaths { get; set; }

        /// <summary>
        /// Gets or Sets DoubleKills
        /// </summary>
        [DataMember(Name="doubleKills", EmitDefaultValue=false)]
        public long? DoubleKills { get; set; }

        /// <summary>
        /// Gets or Sets EarlySurrenderAccomplice
        /// </summary>
        [DataMember(Name="earlySurrenderAccomplice", EmitDefaultValue=false)]
        public bool? EarlySurrenderAccomplice { get; set; }

        /// <summary>
        /// Gets or Sets FirstBloodAssist
        /// </summary>
        [DataMember(Name="firstBloodAssist", EmitDefaultValue=false)]
        public bool? FirstBloodAssist { get; set; }

        /// <summary>
        /// Gets or Sets FirstBloodKill
        /// </summary>
        [DataMember(Name="firstBloodKill", EmitDefaultValue=false)]
        public bool? FirstBloodKill { get; set; }

        /// <summary>
        /// Gets or Sets FirstInhibitorAssist
        /// </summary>
        [DataMember(Name="firstInhibitorAssist", EmitDefaultValue=false)]
        public bool? FirstInhibitorAssist { get; set; }

        /// <summary>
        /// Gets or Sets FirstInhibitorKill
        /// </summary>
        [DataMember(Name="firstInhibitorKill", EmitDefaultValue=false)]
        public bool? FirstInhibitorKill { get; set; }

        /// <summary>
        /// Gets or Sets FirstTowerAssist
        /// </summary>
        [DataMember(Name="firstTowerAssist", EmitDefaultValue=false)]
        public bool? FirstTowerAssist { get; set; }

        /// <summary>
        /// Gets or Sets FirstTowerKill
        /// </summary>
        [DataMember(Name="firstTowerKill", EmitDefaultValue=false)]
        public bool? FirstTowerKill { get; set; }

        /// <summary>
        /// Gets or Sets GameEndedInEarlySurrender
        /// </summary>
        [DataMember(Name="gameEndedInEarlySurrender", EmitDefaultValue=false)]
        public bool? GameEndedInEarlySurrender { get; set; }

        /// <summary>
        /// Gets or Sets GameEndedInSurrender
        /// </summary>
        [DataMember(Name="gameEndedInSurrender", EmitDefaultValue=false)]
        public bool? GameEndedInSurrender { get; set; }

        /// <summary>
        /// Gets or Sets GoldEarned
        /// </summary>
        [DataMember(Name="goldEarned", EmitDefaultValue=false)]
        public long? GoldEarned { get; set; }

        /// <summary>
        /// Gets or Sets GoldSpent
        /// </summary>
        [DataMember(Name="goldSpent", EmitDefaultValue=false)]
        public long? GoldSpent { get; set; }

        /// <summary>
        /// Gets or Sets InhibitorKills
        /// </summary>
        [DataMember(Name="inhibitorKills", EmitDefaultValue=false)]
        public long? InhibitorKills { get; set; }

        /// <summary>
        /// Gets or Sets Item0
        /// </summary>
        [DataMember(Name="item0", EmitDefaultValue=false)]
        public int? Item0 { get; set; }

        /// <summary>
        /// Gets or Sets Item1
        /// </summary>
        [DataMember(Name="item1", EmitDefaultValue=false)]
        public int? Item1 { get; set; }

        /// <summary>
        /// Gets or Sets Item2
        /// </summary>
        [DataMember(Name="item2", EmitDefaultValue=false)]
        public int? Item2 { get; set; }

        /// <summary>
        /// Gets or Sets Item3
        /// </summary>
        [DataMember(Name="item3", EmitDefaultValue=false)]
        public int? Item3 { get; set; }

        /// <summary>
        /// Gets or Sets Item4
        /// </summary>
        [DataMember(Name="item4", EmitDefaultValue=false)]
        public int? Item4 { get; set; }

        /// <summary>
        /// Gets or Sets Item5
        /// </summary>
        [DataMember(Name="item5", EmitDefaultValue=false)]
        public int? Item5 { get; set; }

        /// <summary>
        /// Gets or Sets Item6
        /// </summary>
        [DataMember(Name="item6", EmitDefaultValue=false)]
        public int? Item6 { get; set; }

        /// <summary>
        /// Gets or Sets KillingSprees
        /// </summary>
        [DataMember(Name="killingSprees", EmitDefaultValue=false)]
        public long? KillingSprees { get; set; }

        /// <summary>
        /// Gets or Sets Kills
        /// </summary>
        [DataMember(Name="kills", EmitDefaultValue=false)]
        public long? Kills { get; set; }

        /// <summary>
        /// Gets or Sets LargestCriticalStrike
        /// </summary>
        [DataMember(Name="largestCriticalStrike", EmitDefaultValue=false)]
        public long? LargestCriticalStrike { get; set; }

        /// <summary>
        /// Gets or Sets LargestKillingSpree
        /// </summary>
        [DataMember(Name="largestKillingSpree", EmitDefaultValue=false)]
        public long? LargestKillingSpree { get; set; }

        /// <summary>
        /// Gets or Sets LargestMultiKill
        /// </summary>
        [DataMember(Name="largestMultiKill", EmitDefaultValue=false)]
        public long? LargestMultiKill { get; set; }

        /// <summary>
        /// Gets or Sets LongestTimeSpentLiving
        /// </summary>
        [DataMember(Name="longestTimeSpentLiving", EmitDefaultValue=false)]
        public long? LongestTimeSpentLiving { get; set; }

        /// <summary>
        /// Gets or Sets MagicDamageDealt
        /// </summary>
        [DataMember(Name="magicDamageDealt", EmitDefaultValue=false)]
        public long? MagicDamageDealt { get; set; }

        /// <summary>
        /// Gets or Sets MagicDamageDealtToChampions
        /// </summary>
        [DataMember(Name="magicDamageDealtToChampions", EmitDefaultValue=false)]
        public long? MagicDamageDealtToChampions { get; set; }

        /// <summary>
        /// Gets or Sets MagicalDamageTaken
        /// </summary>
        [DataMember(Name="magicalDamageTaken", EmitDefaultValue=false)]
        public long? MagicalDamageTaken { get; set; }

        /// <summary>
        /// Gets or Sets NeutralMinionsKilled
        /// </summary>
        [DataMember(Name="neutralMinionsKilled", EmitDefaultValue=false)]
        public long? NeutralMinionsKilled { get; set; }

        /// <summary>
        /// Gets or Sets NeutralMinionsKilledEnemyJungle
        /// </summary>
        [DataMember(Name="neutralMinionsKilledEnemyJungle", EmitDefaultValue=false)]
        public long? NeutralMinionsKilledEnemyJungle { get; set; }

        /// <summary>
        /// Gets or Sets NeutralMinionsKilledTeamJungle
        /// </summary>
        [DataMember(Name="neutralMinionsKilledTeamJungle", EmitDefaultValue=false)]
        public long? NeutralMinionsKilledTeamJungle { get; set; }

        /// <summary>
        /// Gets or Sets ObjectivePlayerScore
        /// </summary>
        [DataMember(Name="objectivePlayerScore", EmitDefaultValue=false)]
        public long? ObjectivePlayerScore { get; set; }

        /// <summary>
        /// Gets or Sets ParticipantId
        /// </summary>
        [DataMember(Name="participantId", EmitDefaultValue=false)]
        public int? ParticipantId { get; set; }

        /// <summary>
        /// Gets or Sets PentaKills
        /// </summary>
        [DataMember(Name="pentaKills", EmitDefaultValue=false)]
        public long? PentaKills { get; set; }

        /// <summary>
        /// Gets or Sets Perk0
        /// </summary>
        [DataMember(Name="perk0", EmitDefaultValue=false)]
        public long? Perk0 { get; set; }

        /// <summary>
        /// Gets or Sets Perk0Var1
        /// </summary>
        [DataMember(Name="perk0Var1", EmitDefaultValue=false)]
        public long? Perk0Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk0Var2
        /// </summary>
        [DataMember(Name="perk0Var2", EmitDefaultValue=false)]
        public long? Perk0Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk0Var3
        /// </summary>
        [DataMember(Name="perk0Var3", EmitDefaultValue=false)]
        public long? Perk0Var3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk1
        /// </summary>
        [DataMember(Name="perk1", EmitDefaultValue=false)]
        public long? Perk1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk1Var1
        /// </summary>
        [DataMember(Name="perk1Var1", EmitDefaultValue=false)]
        public long? Perk1Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk1Var2
        /// </summary>
        [DataMember(Name="perk1Var2", EmitDefaultValue=false)]
        public long? Perk1Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk1Var3
        /// </summary>
        [DataMember(Name="perk1Var3", EmitDefaultValue=false)]
        public long? Perk1Var3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk2
        /// </summary>
        [DataMember(Name="perk2", EmitDefaultValue=false)]
        public long? Perk2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk2Var1
        /// </summary>
        [DataMember(Name="perk2Var1", EmitDefaultValue=false)]
        public long? Perk2Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk2Var2
        /// </summary>
        [DataMember(Name="perk2Var2", EmitDefaultValue=false)]
        public long? Perk2Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk2Var3
        /// </summary>
        [DataMember(Name="perk2Var3", EmitDefaultValue=false)]
        public long? Perk2Var3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk3
        /// </summary>
        [DataMember(Name="perk3", EmitDefaultValue=false)]
        public long? Perk3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk3Var1
        /// </summary>
        [DataMember(Name="perk3Var1", EmitDefaultValue=false)]
        public long? Perk3Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk3Var2
        /// </summary>
        [DataMember(Name="perk3Var2", EmitDefaultValue=false)]
        public long? Perk3Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk3Var3
        /// </summary>
        [DataMember(Name="perk3Var3", EmitDefaultValue=false)]
        public long? Perk3Var3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk4
        /// </summary>
        [DataMember(Name="perk4", EmitDefaultValue=false)]
        public long? Perk4 { get; set; }

        /// <summary>
        /// Gets or Sets Perk4Var1
        /// </summary>
        [DataMember(Name="perk4Var1", EmitDefaultValue=false)]
        public long? Perk4Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk4Var2
        /// </summary>
        [DataMember(Name="perk4Var2", EmitDefaultValue=false)]
        public long? Perk4Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk4Var3
        /// </summary>
        [DataMember(Name="perk4Var3", EmitDefaultValue=false)]
        public long? Perk4Var3 { get; set; }

        /// <summary>
        /// Gets or Sets Perk5
        /// </summary>
        [DataMember(Name="perk5", EmitDefaultValue=false)]
        public long? Perk5 { get; set; }

        /// <summary>
        /// Gets or Sets Perk5Var1
        /// </summary>
        [DataMember(Name="perk5Var1", EmitDefaultValue=false)]
        public long? Perk5Var1 { get; set; }

        /// <summary>
        /// Gets or Sets Perk5Var2
        /// </summary>
        [DataMember(Name="perk5Var2", EmitDefaultValue=false)]
        public long? Perk5Var2 { get; set; }

        /// <summary>
        /// Gets or Sets Perk5Var3
        /// </summary>
        [DataMember(Name="perk5Var3", EmitDefaultValue=false)]
        public long? Perk5Var3 { get; set; }

        /// <summary>
        /// Gets or Sets PerkPrimaryStyle
        /// </summary>
        [DataMember(Name="perkPrimaryStyle", EmitDefaultValue=false)]
        public long? PerkPrimaryStyle { get; set; }

        /// <summary>
        /// Gets or Sets PerkSubStyle
        /// </summary>
        [DataMember(Name="perkSubStyle", EmitDefaultValue=false)]
        public long? PerkSubStyle { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalDamageDealt
        /// </summary>
        [DataMember(Name="physicalDamageDealt", EmitDefaultValue=false)]
        public long? PhysicalDamageDealt { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalDamageDealtToChampions
        /// </summary>
        [DataMember(Name="physicalDamageDealtToChampions", EmitDefaultValue=false)]
        public long? PhysicalDamageDealtToChampions { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalDamageTaken
        /// </summary>
        [DataMember(Name="physicalDamageTaken", EmitDefaultValue=false)]
        public long? PhysicalDamageTaken { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore0
        /// </summary>
        [DataMember(Name="playerScore0", EmitDefaultValue=false)]
        public long? PlayerScore0 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore1
        /// </summary>
        [DataMember(Name="playerScore1", EmitDefaultValue=false)]
        public long? PlayerScore1 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore2
        /// </summary>
        [DataMember(Name="playerScore2", EmitDefaultValue=false)]
        public long? PlayerScore2 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore3
        /// </summary>
        [DataMember(Name="playerScore3", EmitDefaultValue=false)]
        public long? PlayerScore3 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore4
        /// </summary>
        [DataMember(Name="playerScore4", EmitDefaultValue=false)]
        public long? PlayerScore4 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore5
        /// </summary>
        [DataMember(Name="playerScore5", EmitDefaultValue=false)]
        public long? PlayerScore5 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore6
        /// </summary>
        [DataMember(Name="playerScore6", EmitDefaultValue=false)]
        public long? PlayerScore6 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore7
        /// </summary>
        [DataMember(Name="playerScore7", EmitDefaultValue=false)]
        public long? PlayerScore7 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore8
        /// </summary>
        [DataMember(Name="playerScore8", EmitDefaultValue=false)]
        public long? PlayerScore8 { get; set; }

        /// <summary>
        /// Gets or Sets PlayerScore9
        /// </summary>
        [DataMember(Name="playerScore9", EmitDefaultValue=false)]
        public long? PlayerScore9 { get; set; }

        /// <summary>
        /// Gets or Sets QuadraKills
        /// </summary>
        [DataMember(Name="quadraKills", EmitDefaultValue=false)]
        public long? QuadraKills { get; set; }

        /// <summary>
        /// Gets or Sets SightWardsBoughtInGame
        /// </summary>
        [DataMember(Name="sightWardsBoughtInGame", EmitDefaultValue=false)]
        public long? SightWardsBoughtInGame { get; set; }

        /// <summary>
        /// Gets or Sets TeamEarlySurrendered
        /// </summary>
        [DataMember(Name="teamEarlySurrendered", EmitDefaultValue=false)]
        public bool? TeamEarlySurrendered { get; set; }

        /// <summary>
        /// Gets or Sets TimeCCingOthers
        /// </summary>
        [DataMember(Name="timeCCingOthers", EmitDefaultValue=false)]
        public long? TimeCCingOthers { get; set; }

        /// <summary>
        /// Gets or Sets TotalDamageDealt
        /// </summary>
        [DataMember(Name="totalDamageDealt", EmitDefaultValue=false)]
        public long? TotalDamageDealt { get; set; }

        /// <summary>
        /// Gets or Sets TotalDamageDealtToChampions
        /// </summary>
        [DataMember(Name="totalDamageDealtToChampions", EmitDefaultValue=false)]
        public long? TotalDamageDealtToChampions { get; set; }

        /// <summary>
        /// Gets or Sets TotalDamageTaken
        /// </summary>
        [DataMember(Name="totalDamageTaken", EmitDefaultValue=false)]
        public long? TotalDamageTaken { get; set; }

        /// <summary>
        /// Gets or Sets TotalHeal
        /// </summary>
        [DataMember(Name="totalHeal", EmitDefaultValue=false)]
        public long? TotalHeal { get; set; }

        /// <summary>
        /// Gets or Sets TotalMinionsKilled
        /// </summary>
        [DataMember(Name="totalMinionsKilled", EmitDefaultValue=false)]
        public long? TotalMinionsKilled { get; set; }

        /// <summary>
        /// Gets or Sets TotalPlayerScore
        /// </summary>
        [DataMember(Name="totalPlayerScore", EmitDefaultValue=false)]
        public long? TotalPlayerScore { get; set; }

        /// <summary>
        /// Gets or Sets TotalScoreRank
        /// </summary>
        [DataMember(Name="totalScoreRank", EmitDefaultValue=false)]
        public long? TotalScoreRank { get; set; }

        /// <summary>
        /// Gets or Sets TotalTimeCrowdControlDealt
        /// </summary>
        [DataMember(Name="totalTimeCrowdControlDealt", EmitDefaultValue=false)]
        public long? TotalTimeCrowdControlDealt { get; set; }

        /// <summary>
        /// Gets or Sets TotalUnitsHealed
        /// </summary>
        [DataMember(Name="totalUnitsHealed", EmitDefaultValue=false)]
        public long? TotalUnitsHealed { get; set; }

        /// <summary>
        /// Gets or Sets TripleKills
        /// </summary>
        [DataMember(Name="tripleKills", EmitDefaultValue=false)]
        public long? TripleKills { get; set; }

        /// <summary>
        /// Gets or Sets TrueDamageDealt
        /// </summary>
        [DataMember(Name="trueDamageDealt", EmitDefaultValue=false)]
        public long? TrueDamageDealt { get; set; }

        /// <summary>
        /// Gets or Sets TrueDamageDealtToChampions
        /// </summary>
        [DataMember(Name="trueDamageDealtToChampions", EmitDefaultValue=false)]
        public long? TrueDamageDealtToChampions { get; set; }

        /// <summary>
        /// Gets or Sets TrueDamageTaken
        /// </summary>
        [DataMember(Name="trueDamageTaken", EmitDefaultValue=false)]
        public long? TrueDamageTaken { get; set; }

        /// <summary>
        /// Gets or Sets TurretKills
        /// </summary>
        [DataMember(Name="turretKills", EmitDefaultValue=false)]
        public long? TurretKills { get; set; }

        /// <summary>
        /// Gets or Sets UnrealKills
        /// </summary>
        [DataMember(Name="unrealKills", EmitDefaultValue=false)]
        public long? UnrealKills { get; set; }

        /// <summary>
        /// Gets or Sets VisionScore
        /// </summary>
        [DataMember(Name="visionScore", EmitDefaultValue=false)]
        public long? VisionScore { get; set; }

        /// <summary>
        /// Gets or Sets VisionWardsBoughtInGame
        /// </summary>
        [DataMember(Name="visionWardsBoughtInGame", EmitDefaultValue=false)]
        public long? VisionWardsBoughtInGame { get; set; }

        /// <summary>
        /// Gets or Sets WardsKilled
        /// </summary>
        [DataMember(Name="wardsKilled", EmitDefaultValue=false)]
        public long? WardsKilled { get; set; }

        /// <summary>
        /// Gets or Sets WardsPlaced
        /// </summary>
        [DataMember(Name="wardsPlaced", EmitDefaultValue=false)]
        public long? WardsPlaced { get; set; }

        /// <summary>
        /// Gets or Sets Win
        /// </summary>
        [DataMember(Name="win", EmitDefaultValue=false)]
        public bool? Win { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolMatchHistoryMatchHistoryParticipantStatistics {\n");
            sb.Append("  Assists: ").Append(Assists).Append("\n");
            sb.Append("  CausedEarlySurrender: ").Append(CausedEarlySurrender).Append("\n");
            sb.Append("  ChampLevel: ").Append(ChampLevel).Append("\n");
            sb.Append("  CombatPlayerScore: ").Append(CombatPlayerScore).Append("\n");
            sb.Append("  DamageDealtToObjectives: ").Append(DamageDealtToObjectives).Append("\n");
            sb.Append("  DamageDealtToTurrets: ").Append(DamageDealtToTurrets).Append("\n");
            sb.Append("  DamageSelfMitigated: ").Append(DamageSelfMitigated).Append("\n");
            sb.Append("  Deaths: ").Append(Deaths).Append("\n");
            sb.Append("  DoubleKills: ").Append(DoubleKills).Append("\n");
            sb.Append("  EarlySurrenderAccomplice: ").Append(EarlySurrenderAccomplice).Append("\n");
            sb.Append("  FirstBloodAssist: ").Append(FirstBloodAssist).Append("\n");
            sb.Append("  FirstBloodKill: ").Append(FirstBloodKill).Append("\n");
            sb.Append("  FirstInhibitorAssist: ").Append(FirstInhibitorAssist).Append("\n");
            sb.Append("  FirstInhibitorKill: ").Append(FirstInhibitorKill).Append("\n");
            sb.Append("  FirstTowerAssist: ").Append(FirstTowerAssist).Append("\n");
            sb.Append("  FirstTowerKill: ").Append(FirstTowerKill).Append("\n");
            sb.Append("  GameEndedInEarlySurrender: ").Append(GameEndedInEarlySurrender).Append("\n");
            sb.Append("  GameEndedInSurrender: ").Append(GameEndedInSurrender).Append("\n");
            sb.Append("  GoldEarned: ").Append(GoldEarned).Append("\n");
            sb.Append("  GoldSpent: ").Append(GoldSpent).Append("\n");
            sb.Append("  InhibitorKills: ").Append(InhibitorKills).Append("\n");
            sb.Append("  Item0: ").Append(Item0).Append("\n");
            sb.Append("  Item1: ").Append(Item1).Append("\n");
            sb.Append("  Item2: ").Append(Item2).Append("\n");
            sb.Append("  Item3: ").Append(Item3).Append("\n");
            sb.Append("  Item4: ").Append(Item4).Append("\n");
            sb.Append("  Item5: ").Append(Item5).Append("\n");
            sb.Append("  Item6: ").Append(Item6).Append("\n");
            sb.Append("  KillingSprees: ").Append(KillingSprees).Append("\n");
            sb.Append("  Kills: ").Append(Kills).Append("\n");
            sb.Append("  LargestCriticalStrike: ").Append(LargestCriticalStrike).Append("\n");
            sb.Append("  LargestKillingSpree: ").Append(LargestKillingSpree).Append("\n");
            sb.Append("  LargestMultiKill: ").Append(LargestMultiKill).Append("\n");
            sb.Append("  LongestTimeSpentLiving: ").Append(LongestTimeSpentLiving).Append("\n");
            sb.Append("  MagicDamageDealt: ").Append(MagicDamageDealt).Append("\n");
            sb.Append("  MagicDamageDealtToChampions: ").Append(MagicDamageDealtToChampions).Append("\n");
            sb.Append("  MagicalDamageTaken: ").Append(MagicalDamageTaken).Append("\n");
            sb.Append("  NeutralMinionsKilled: ").Append(NeutralMinionsKilled).Append("\n");
            sb.Append("  NeutralMinionsKilledEnemyJungle: ").Append(NeutralMinionsKilledEnemyJungle).Append("\n");
            sb.Append("  NeutralMinionsKilledTeamJungle: ").Append(NeutralMinionsKilledTeamJungle).Append("\n");
            sb.Append("  ObjectivePlayerScore: ").Append(ObjectivePlayerScore).Append("\n");
            sb.Append("  ParticipantId: ").Append(ParticipantId).Append("\n");
            sb.Append("  PentaKills: ").Append(PentaKills).Append("\n");
            sb.Append("  Perk0: ").Append(Perk0).Append("\n");
            sb.Append("  Perk0Var1: ").Append(Perk0Var1).Append("\n");
            sb.Append("  Perk0Var2: ").Append(Perk0Var2).Append("\n");
            sb.Append("  Perk0Var3: ").Append(Perk0Var3).Append("\n");
            sb.Append("  Perk1: ").Append(Perk1).Append("\n");
            sb.Append("  Perk1Var1: ").Append(Perk1Var1).Append("\n");
            sb.Append("  Perk1Var2: ").Append(Perk1Var2).Append("\n");
            sb.Append("  Perk1Var3: ").Append(Perk1Var3).Append("\n");
            sb.Append("  Perk2: ").Append(Perk2).Append("\n");
            sb.Append("  Perk2Var1: ").Append(Perk2Var1).Append("\n");
            sb.Append("  Perk2Var2: ").Append(Perk2Var2).Append("\n");
            sb.Append("  Perk2Var3: ").Append(Perk2Var3).Append("\n");
            sb.Append("  Perk3: ").Append(Perk3).Append("\n");
            sb.Append("  Perk3Var1: ").Append(Perk3Var1).Append("\n");
            sb.Append("  Perk3Var2: ").Append(Perk3Var2).Append("\n");
            sb.Append("  Perk3Var3: ").Append(Perk3Var3).Append("\n");
            sb.Append("  Perk4: ").Append(Perk4).Append("\n");
            sb.Append("  Perk4Var1: ").Append(Perk4Var1).Append("\n");
            sb.Append("  Perk4Var2: ").Append(Perk4Var2).Append("\n");
            sb.Append("  Perk4Var3: ").Append(Perk4Var3).Append("\n");
            sb.Append("  Perk5: ").Append(Perk5).Append("\n");
            sb.Append("  Perk5Var1: ").Append(Perk5Var1).Append("\n");
            sb.Append("  Perk5Var2: ").Append(Perk5Var2).Append("\n");
            sb.Append("  Perk5Var3: ").Append(Perk5Var3).Append("\n");
            sb.Append("  PerkPrimaryStyle: ").Append(PerkPrimaryStyle).Append("\n");
            sb.Append("  PerkSubStyle: ").Append(PerkSubStyle).Append("\n");
            sb.Append("  PhysicalDamageDealt: ").Append(PhysicalDamageDealt).Append("\n");
            sb.Append("  PhysicalDamageDealtToChampions: ").Append(PhysicalDamageDealtToChampions).Append("\n");
            sb.Append("  PhysicalDamageTaken: ").Append(PhysicalDamageTaken).Append("\n");
            sb.Append("  PlayerScore0: ").Append(PlayerScore0).Append("\n");
            sb.Append("  PlayerScore1: ").Append(PlayerScore1).Append("\n");
            sb.Append("  PlayerScore2: ").Append(PlayerScore2).Append("\n");
            sb.Append("  PlayerScore3: ").Append(PlayerScore3).Append("\n");
            sb.Append("  PlayerScore4: ").Append(PlayerScore4).Append("\n");
            sb.Append("  PlayerScore5: ").Append(PlayerScore5).Append("\n");
            sb.Append("  PlayerScore6: ").Append(PlayerScore6).Append("\n");
            sb.Append("  PlayerScore7: ").Append(PlayerScore7).Append("\n");
            sb.Append("  PlayerScore8: ").Append(PlayerScore8).Append("\n");
            sb.Append("  PlayerScore9: ").Append(PlayerScore9).Append("\n");
            sb.Append("  QuadraKills: ").Append(QuadraKills).Append("\n");
            sb.Append("  SightWardsBoughtInGame: ").Append(SightWardsBoughtInGame).Append("\n");
            sb.Append("  TeamEarlySurrendered: ").Append(TeamEarlySurrendered).Append("\n");
            sb.Append("  TimeCCingOthers: ").Append(TimeCCingOthers).Append("\n");
            sb.Append("  TotalDamageDealt: ").Append(TotalDamageDealt).Append("\n");
            sb.Append("  TotalDamageDealtToChampions: ").Append(TotalDamageDealtToChampions).Append("\n");
            sb.Append("  TotalDamageTaken: ").Append(TotalDamageTaken).Append("\n");
            sb.Append("  TotalHeal: ").Append(TotalHeal).Append("\n");
            sb.Append("  TotalMinionsKilled: ").Append(TotalMinionsKilled).Append("\n");
            sb.Append("  TotalPlayerScore: ").Append(TotalPlayerScore).Append("\n");
            sb.Append("  TotalScoreRank: ").Append(TotalScoreRank).Append("\n");
            sb.Append("  TotalTimeCrowdControlDealt: ").Append(TotalTimeCrowdControlDealt).Append("\n");
            sb.Append("  TotalUnitsHealed: ").Append(TotalUnitsHealed).Append("\n");
            sb.Append("  TripleKills: ").Append(TripleKills).Append("\n");
            sb.Append("  TrueDamageDealt: ").Append(TrueDamageDealt).Append("\n");
            sb.Append("  TrueDamageDealtToChampions: ").Append(TrueDamageDealtToChampions).Append("\n");
            sb.Append("  TrueDamageTaken: ").Append(TrueDamageTaken).Append("\n");
            sb.Append("  TurretKills: ").Append(TurretKills).Append("\n");
            sb.Append("  UnrealKills: ").Append(UnrealKills).Append("\n");
            sb.Append("  VisionScore: ").Append(VisionScore).Append("\n");
            sb.Append("  VisionWardsBoughtInGame: ").Append(VisionWardsBoughtInGame).Append("\n");
            sb.Append("  WardsKilled: ").Append(WardsKilled).Append("\n");
            sb.Append("  WardsPlaced: ").Append(WardsPlaced).Append("\n");
            sb.Append("  Win: ").Append(Win).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolMatchHistoryMatchHistoryParticipantStatistics);
        }

        /// <summary>
        /// Returns true if LolMatchHistoryMatchHistoryParticipantStatistics instances are equal
        /// </summary>
        /// <param name="other">Instance of LolMatchHistoryMatchHistoryParticipantStatistics to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolMatchHistoryMatchHistoryParticipantStatistics other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Assists == other.Assists ||
                    this.Assists != null &&
                    this.Assists.Equals(other.Assists)
                ) && 
                (
                    this.CausedEarlySurrender == other.CausedEarlySurrender ||
                    this.CausedEarlySurrender != null &&
                    this.CausedEarlySurrender.Equals(other.CausedEarlySurrender)
                ) && 
                (
                    this.ChampLevel == other.ChampLevel ||
                    this.ChampLevel != null &&
                    this.ChampLevel.Equals(other.ChampLevel)
                ) && 
                (
                    this.CombatPlayerScore == other.CombatPlayerScore ||
                    this.CombatPlayerScore != null &&
                    this.CombatPlayerScore.Equals(other.CombatPlayerScore)
                ) && 
                (
                    this.DamageDealtToObjectives == other.DamageDealtToObjectives ||
                    this.DamageDealtToObjectives != null &&
                    this.DamageDealtToObjectives.Equals(other.DamageDealtToObjectives)
                ) && 
                (
                    this.DamageDealtToTurrets == other.DamageDealtToTurrets ||
                    this.DamageDealtToTurrets != null &&
                    this.DamageDealtToTurrets.Equals(other.DamageDealtToTurrets)
                ) && 
                (
                    this.DamageSelfMitigated == other.DamageSelfMitigated ||
                    this.DamageSelfMitigated != null &&
                    this.DamageSelfMitigated.Equals(other.DamageSelfMitigated)
                ) && 
                (
                    this.Deaths == other.Deaths ||
                    this.Deaths != null &&
                    this.Deaths.Equals(other.Deaths)
                ) && 
                (
                    this.DoubleKills == other.DoubleKills ||
                    this.DoubleKills != null &&
                    this.DoubleKills.Equals(other.DoubleKills)
                ) && 
                (
                    this.EarlySurrenderAccomplice == other.EarlySurrenderAccomplice ||
                    this.EarlySurrenderAccomplice != null &&
                    this.EarlySurrenderAccomplice.Equals(other.EarlySurrenderAccomplice)
                ) && 
                (
                    this.FirstBloodAssist == other.FirstBloodAssist ||
                    this.FirstBloodAssist != null &&
                    this.FirstBloodAssist.Equals(other.FirstBloodAssist)
                ) && 
                (
                    this.FirstBloodKill == other.FirstBloodKill ||
                    this.FirstBloodKill != null &&
                    this.FirstBloodKill.Equals(other.FirstBloodKill)
                ) && 
                (
                    this.FirstInhibitorAssist == other.FirstInhibitorAssist ||
                    this.FirstInhibitorAssist != null &&
                    this.FirstInhibitorAssist.Equals(other.FirstInhibitorAssist)
                ) && 
                (
                    this.FirstInhibitorKill == other.FirstInhibitorKill ||
                    this.FirstInhibitorKill != null &&
                    this.FirstInhibitorKill.Equals(other.FirstInhibitorKill)
                ) && 
                (
                    this.FirstTowerAssist == other.FirstTowerAssist ||
                    this.FirstTowerAssist != null &&
                    this.FirstTowerAssist.Equals(other.FirstTowerAssist)
                ) && 
                (
                    this.FirstTowerKill == other.FirstTowerKill ||
                    this.FirstTowerKill != null &&
                    this.FirstTowerKill.Equals(other.FirstTowerKill)
                ) && 
                (
                    this.GameEndedInEarlySurrender == other.GameEndedInEarlySurrender ||
                    this.GameEndedInEarlySurrender != null &&
                    this.GameEndedInEarlySurrender.Equals(other.GameEndedInEarlySurrender)
                ) && 
                (
                    this.GameEndedInSurrender == other.GameEndedInSurrender ||
                    this.GameEndedInSurrender != null &&
                    this.GameEndedInSurrender.Equals(other.GameEndedInSurrender)
                ) && 
                (
                    this.GoldEarned == other.GoldEarned ||
                    this.GoldEarned != null &&
                    this.GoldEarned.Equals(other.GoldEarned)
                ) && 
                (
                    this.GoldSpent == other.GoldSpent ||
                    this.GoldSpent != null &&
                    this.GoldSpent.Equals(other.GoldSpent)
                ) && 
                (
                    this.InhibitorKills == other.InhibitorKills ||
                    this.InhibitorKills != null &&
                    this.InhibitorKills.Equals(other.InhibitorKills)
                ) && 
                (
                    this.Item0 == other.Item0 ||
                    this.Item0 != null &&
                    this.Item0.Equals(other.Item0)
                ) && 
                (
                    this.Item1 == other.Item1 ||
                    this.Item1 != null &&
                    this.Item1.Equals(other.Item1)
                ) && 
                (
                    this.Item2 == other.Item2 ||
                    this.Item2 != null &&
                    this.Item2.Equals(other.Item2)
                ) && 
                (
                    this.Item3 == other.Item3 ||
                    this.Item3 != null &&
                    this.Item3.Equals(other.Item3)
                ) && 
                (
                    this.Item4 == other.Item4 ||
                    this.Item4 != null &&
                    this.Item4.Equals(other.Item4)
                ) && 
                (
                    this.Item5 == other.Item5 ||
                    this.Item5 != null &&
                    this.Item5.Equals(other.Item5)
                ) && 
                (
                    this.Item6 == other.Item6 ||
                    this.Item6 != null &&
                    this.Item6.Equals(other.Item6)
                ) && 
                (
                    this.KillingSprees == other.KillingSprees ||
                    this.KillingSprees != null &&
                    this.KillingSprees.Equals(other.KillingSprees)
                ) && 
                (
                    this.Kills == other.Kills ||
                    this.Kills != null &&
                    this.Kills.Equals(other.Kills)
                ) && 
                (
                    this.LargestCriticalStrike == other.LargestCriticalStrike ||
                    this.LargestCriticalStrike != null &&
                    this.LargestCriticalStrike.Equals(other.LargestCriticalStrike)
                ) && 
                (
                    this.LargestKillingSpree == other.LargestKillingSpree ||
                    this.LargestKillingSpree != null &&
                    this.LargestKillingSpree.Equals(other.LargestKillingSpree)
                ) && 
                (
                    this.LargestMultiKill == other.LargestMultiKill ||
                    this.LargestMultiKill != null &&
                    this.LargestMultiKill.Equals(other.LargestMultiKill)
                ) && 
                (
                    this.LongestTimeSpentLiving == other.LongestTimeSpentLiving ||
                    this.LongestTimeSpentLiving != null &&
                    this.LongestTimeSpentLiving.Equals(other.LongestTimeSpentLiving)
                ) && 
                (
                    this.MagicDamageDealt == other.MagicDamageDealt ||
                    this.MagicDamageDealt != null &&
                    this.MagicDamageDealt.Equals(other.MagicDamageDealt)
                ) && 
                (
                    this.MagicDamageDealtToChampions == other.MagicDamageDealtToChampions ||
                    this.MagicDamageDealtToChampions != null &&
                    this.MagicDamageDealtToChampions.Equals(other.MagicDamageDealtToChampions)
                ) && 
                (
                    this.MagicalDamageTaken == other.MagicalDamageTaken ||
                    this.MagicalDamageTaken != null &&
                    this.MagicalDamageTaken.Equals(other.MagicalDamageTaken)
                ) && 
                (
                    this.NeutralMinionsKilled == other.NeutralMinionsKilled ||
                    this.NeutralMinionsKilled != null &&
                    this.NeutralMinionsKilled.Equals(other.NeutralMinionsKilled)
                ) && 
                (
                    this.NeutralMinionsKilledEnemyJungle == other.NeutralMinionsKilledEnemyJungle ||
                    this.NeutralMinionsKilledEnemyJungle != null &&
                    this.NeutralMinionsKilledEnemyJungle.Equals(other.NeutralMinionsKilledEnemyJungle)
                ) && 
                (
                    this.NeutralMinionsKilledTeamJungle == other.NeutralMinionsKilledTeamJungle ||
                    this.NeutralMinionsKilledTeamJungle != null &&
                    this.NeutralMinionsKilledTeamJungle.Equals(other.NeutralMinionsKilledTeamJungle)
                ) && 
                (
                    this.ObjectivePlayerScore == other.ObjectivePlayerScore ||
                    this.ObjectivePlayerScore != null &&
                    this.ObjectivePlayerScore.Equals(other.ObjectivePlayerScore)
                ) && 
                (
                    this.ParticipantId == other.ParticipantId ||
                    this.ParticipantId != null &&
                    this.ParticipantId.Equals(other.ParticipantId)
                ) && 
                (
                    this.PentaKills == other.PentaKills ||
                    this.PentaKills != null &&
                    this.PentaKills.Equals(other.PentaKills)
                ) && 
                (
                    this.Perk0 == other.Perk0 ||
                    this.Perk0 != null &&
                    this.Perk0.Equals(other.Perk0)
                ) && 
                (
                    this.Perk0Var1 == other.Perk0Var1 ||
                    this.Perk0Var1 != null &&
                    this.Perk0Var1.Equals(other.Perk0Var1)
                ) && 
                (
                    this.Perk0Var2 == other.Perk0Var2 ||
                    this.Perk0Var2 != null &&
                    this.Perk0Var2.Equals(other.Perk0Var2)
                ) && 
                (
                    this.Perk0Var3 == other.Perk0Var3 ||
                    this.Perk0Var3 != null &&
                    this.Perk0Var3.Equals(other.Perk0Var3)
                ) && 
                (
                    this.Perk1 == other.Perk1 ||
                    this.Perk1 != null &&
                    this.Perk1.Equals(other.Perk1)
                ) && 
                (
                    this.Perk1Var1 == other.Perk1Var1 ||
                    this.Perk1Var1 != null &&
                    this.Perk1Var1.Equals(other.Perk1Var1)
                ) && 
                (
                    this.Perk1Var2 == other.Perk1Var2 ||
                    this.Perk1Var2 != null &&
                    this.Perk1Var2.Equals(other.Perk1Var2)
                ) && 
                (
                    this.Perk1Var3 == other.Perk1Var3 ||
                    this.Perk1Var3 != null &&
                    this.Perk1Var3.Equals(other.Perk1Var3)
                ) && 
                (
                    this.Perk2 == other.Perk2 ||
                    this.Perk2 != null &&
                    this.Perk2.Equals(other.Perk2)
                ) && 
                (
                    this.Perk2Var1 == other.Perk2Var1 ||
                    this.Perk2Var1 != null &&
                    this.Perk2Var1.Equals(other.Perk2Var1)
                ) && 
                (
                    this.Perk2Var2 == other.Perk2Var2 ||
                    this.Perk2Var2 != null &&
                    this.Perk2Var2.Equals(other.Perk2Var2)
                ) && 
                (
                    this.Perk2Var3 == other.Perk2Var3 ||
                    this.Perk2Var3 != null &&
                    this.Perk2Var3.Equals(other.Perk2Var3)
                ) && 
                (
                    this.Perk3 == other.Perk3 ||
                    this.Perk3 != null &&
                    this.Perk3.Equals(other.Perk3)
                ) && 
                (
                    this.Perk3Var1 == other.Perk3Var1 ||
                    this.Perk3Var1 != null &&
                    this.Perk3Var1.Equals(other.Perk3Var1)
                ) && 
                (
                    this.Perk3Var2 == other.Perk3Var2 ||
                    this.Perk3Var2 != null &&
                    this.Perk3Var2.Equals(other.Perk3Var2)
                ) && 
                (
                    this.Perk3Var3 == other.Perk3Var3 ||
                    this.Perk3Var3 != null &&
                    this.Perk3Var3.Equals(other.Perk3Var3)
                ) && 
                (
                    this.Perk4 == other.Perk4 ||
                    this.Perk4 != null &&
                    this.Perk4.Equals(other.Perk4)
                ) && 
                (
                    this.Perk4Var1 == other.Perk4Var1 ||
                    this.Perk4Var1 != null &&
                    this.Perk4Var1.Equals(other.Perk4Var1)
                ) && 
                (
                    this.Perk4Var2 == other.Perk4Var2 ||
                    this.Perk4Var2 != null &&
                    this.Perk4Var2.Equals(other.Perk4Var2)
                ) && 
                (
                    this.Perk4Var3 == other.Perk4Var3 ||
                    this.Perk4Var3 != null &&
                    this.Perk4Var3.Equals(other.Perk4Var3)
                ) && 
                (
                    this.Perk5 == other.Perk5 ||
                    this.Perk5 != null &&
                    this.Perk5.Equals(other.Perk5)
                ) && 
                (
                    this.Perk5Var1 == other.Perk5Var1 ||
                    this.Perk5Var1 != null &&
                    this.Perk5Var1.Equals(other.Perk5Var1)
                ) && 
                (
                    this.Perk5Var2 == other.Perk5Var2 ||
                    this.Perk5Var2 != null &&
                    this.Perk5Var2.Equals(other.Perk5Var2)
                ) && 
                (
                    this.Perk5Var3 == other.Perk5Var3 ||
                    this.Perk5Var3 != null &&
                    this.Perk5Var3.Equals(other.Perk5Var3)
                ) && 
                (
                    this.PerkPrimaryStyle == other.PerkPrimaryStyle ||
                    this.PerkPrimaryStyle != null &&
                    this.PerkPrimaryStyle.Equals(other.PerkPrimaryStyle)
                ) && 
                (
                    this.PerkSubStyle == other.PerkSubStyle ||
                    this.PerkSubStyle != null &&
                    this.PerkSubStyle.Equals(other.PerkSubStyle)
                ) && 
                (
                    this.PhysicalDamageDealt == other.PhysicalDamageDealt ||
                    this.PhysicalDamageDealt != null &&
                    this.PhysicalDamageDealt.Equals(other.PhysicalDamageDealt)
                ) && 
                (
                    this.PhysicalDamageDealtToChampions == other.PhysicalDamageDealtToChampions ||
                    this.PhysicalDamageDealtToChampions != null &&
                    this.PhysicalDamageDealtToChampions.Equals(other.PhysicalDamageDealtToChampions)
                ) && 
                (
                    this.PhysicalDamageTaken == other.PhysicalDamageTaken ||
                    this.PhysicalDamageTaken != null &&
                    this.PhysicalDamageTaken.Equals(other.PhysicalDamageTaken)
                ) && 
                (
                    this.PlayerScore0 == other.PlayerScore0 ||
                    this.PlayerScore0 != null &&
                    this.PlayerScore0.Equals(other.PlayerScore0)
                ) && 
                (
                    this.PlayerScore1 == other.PlayerScore1 ||
                    this.PlayerScore1 != null &&
                    this.PlayerScore1.Equals(other.PlayerScore1)
                ) && 
                (
                    this.PlayerScore2 == other.PlayerScore2 ||
                    this.PlayerScore2 != null &&
                    this.PlayerScore2.Equals(other.PlayerScore2)
                ) && 
                (
                    this.PlayerScore3 == other.PlayerScore3 ||
                    this.PlayerScore3 != null &&
                    this.PlayerScore3.Equals(other.PlayerScore3)
                ) && 
                (
                    this.PlayerScore4 == other.PlayerScore4 ||
                    this.PlayerScore4 != null &&
                    this.PlayerScore4.Equals(other.PlayerScore4)
                ) && 
                (
                    this.PlayerScore5 == other.PlayerScore5 ||
                    this.PlayerScore5 != null &&
                    this.PlayerScore5.Equals(other.PlayerScore5)
                ) && 
                (
                    this.PlayerScore6 == other.PlayerScore6 ||
                    this.PlayerScore6 != null &&
                    this.PlayerScore6.Equals(other.PlayerScore6)
                ) && 
                (
                    this.PlayerScore7 == other.PlayerScore7 ||
                    this.PlayerScore7 != null &&
                    this.PlayerScore7.Equals(other.PlayerScore7)
                ) && 
                (
                    this.PlayerScore8 == other.PlayerScore8 ||
                    this.PlayerScore8 != null &&
                    this.PlayerScore8.Equals(other.PlayerScore8)
                ) && 
                (
                    this.PlayerScore9 == other.PlayerScore9 ||
                    this.PlayerScore9 != null &&
                    this.PlayerScore9.Equals(other.PlayerScore9)
                ) && 
                (
                    this.QuadraKills == other.QuadraKills ||
                    this.QuadraKills != null &&
                    this.QuadraKills.Equals(other.QuadraKills)
                ) && 
                (
                    this.SightWardsBoughtInGame == other.SightWardsBoughtInGame ||
                    this.SightWardsBoughtInGame != null &&
                    this.SightWardsBoughtInGame.Equals(other.SightWardsBoughtInGame)
                ) && 
                (
                    this.TeamEarlySurrendered == other.TeamEarlySurrendered ||
                    this.TeamEarlySurrendered != null &&
                    this.TeamEarlySurrendered.Equals(other.TeamEarlySurrendered)
                ) && 
                (
                    this.TimeCCingOthers == other.TimeCCingOthers ||
                    this.TimeCCingOthers != null &&
                    this.TimeCCingOthers.Equals(other.TimeCCingOthers)
                ) && 
                (
                    this.TotalDamageDealt == other.TotalDamageDealt ||
                    this.TotalDamageDealt != null &&
                    this.TotalDamageDealt.Equals(other.TotalDamageDealt)
                ) && 
                (
                    this.TotalDamageDealtToChampions == other.TotalDamageDealtToChampions ||
                    this.TotalDamageDealtToChampions != null &&
                    this.TotalDamageDealtToChampions.Equals(other.TotalDamageDealtToChampions)
                ) && 
                (
                    this.TotalDamageTaken == other.TotalDamageTaken ||
                    this.TotalDamageTaken != null &&
                    this.TotalDamageTaken.Equals(other.TotalDamageTaken)
                ) && 
                (
                    this.TotalHeal == other.TotalHeal ||
                    this.TotalHeal != null &&
                    this.TotalHeal.Equals(other.TotalHeal)
                ) && 
                (
                    this.TotalMinionsKilled == other.TotalMinionsKilled ||
                    this.TotalMinionsKilled != null &&
                    this.TotalMinionsKilled.Equals(other.TotalMinionsKilled)
                ) && 
                (
                    this.TotalPlayerScore == other.TotalPlayerScore ||
                    this.TotalPlayerScore != null &&
                    this.TotalPlayerScore.Equals(other.TotalPlayerScore)
                ) && 
                (
                    this.TotalScoreRank == other.TotalScoreRank ||
                    this.TotalScoreRank != null &&
                    this.TotalScoreRank.Equals(other.TotalScoreRank)
                ) && 
                (
                    this.TotalTimeCrowdControlDealt == other.TotalTimeCrowdControlDealt ||
                    this.TotalTimeCrowdControlDealt != null &&
                    this.TotalTimeCrowdControlDealt.Equals(other.TotalTimeCrowdControlDealt)
                ) && 
                (
                    this.TotalUnitsHealed == other.TotalUnitsHealed ||
                    this.TotalUnitsHealed != null &&
                    this.TotalUnitsHealed.Equals(other.TotalUnitsHealed)
                ) && 
                (
                    this.TripleKills == other.TripleKills ||
                    this.TripleKills != null &&
                    this.TripleKills.Equals(other.TripleKills)
                ) && 
                (
                    this.TrueDamageDealt == other.TrueDamageDealt ||
                    this.TrueDamageDealt != null &&
                    this.TrueDamageDealt.Equals(other.TrueDamageDealt)
                ) && 
                (
                    this.TrueDamageDealtToChampions == other.TrueDamageDealtToChampions ||
                    this.TrueDamageDealtToChampions != null &&
                    this.TrueDamageDealtToChampions.Equals(other.TrueDamageDealtToChampions)
                ) && 
                (
                    this.TrueDamageTaken == other.TrueDamageTaken ||
                    this.TrueDamageTaken != null &&
                    this.TrueDamageTaken.Equals(other.TrueDamageTaken)
                ) && 
                (
                    this.TurretKills == other.TurretKills ||
                    this.TurretKills != null &&
                    this.TurretKills.Equals(other.TurretKills)
                ) && 
                (
                    this.UnrealKills == other.UnrealKills ||
                    this.UnrealKills != null &&
                    this.UnrealKills.Equals(other.UnrealKills)
                ) && 
                (
                    this.VisionScore == other.VisionScore ||
                    this.VisionScore != null &&
                    this.VisionScore.Equals(other.VisionScore)
                ) && 
                (
                    this.VisionWardsBoughtInGame == other.VisionWardsBoughtInGame ||
                    this.VisionWardsBoughtInGame != null &&
                    this.VisionWardsBoughtInGame.Equals(other.VisionWardsBoughtInGame)
                ) && 
                (
                    this.WardsKilled == other.WardsKilled ||
                    this.WardsKilled != null &&
                    this.WardsKilled.Equals(other.WardsKilled)
                ) && 
                (
                    this.WardsPlaced == other.WardsPlaced ||
                    this.WardsPlaced != null &&
                    this.WardsPlaced.Equals(other.WardsPlaced)
                ) && 
                (
                    this.Win == other.Win ||
                    this.Win != null &&
                    this.Win.Equals(other.Win)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Assists != null)
                    hash = hash * 59 + this.Assists.GetHashCode();
                if (this.CausedEarlySurrender != null)
                    hash = hash * 59 + this.CausedEarlySurrender.GetHashCode();
                if (this.ChampLevel != null)
                    hash = hash * 59 + this.ChampLevel.GetHashCode();
                if (this.CombatPlayerScore != null)
                    hash = hash * 59 + this.CombatPlayerScore.GetHashCode();
                if (this.DamageDealtToObjectives != null)
                    hash = hash * 59 + this.DamageDealtToObjectives.GetHashCode();
                if (this.DamageDealtToTurrets != null)
                    hash = hash * 59 + this.DamageDealtToTurrets.GetHashCode();
                if (this.DamageSelfMitigated != null)
                    hash = hash * 59 + this.DamageSelfMitigated.GetHashCode();
                if (this.Deaths != null)
                    hash = hash * 59 + this.Deaths.GetHashCode();
                if (this.DoubleKills != null)
                    hash = hash * 59 + this.DoubleKills.GetHashCode();
                if (this.EarlySurrenderAccomplice != null)
                    hash = hash * 59 + this.EarlySurrenderAccomplice.GetHashCode();
                if (this.FirstBloodAssist != null)
                    hash = hash * 59 + this.FirstBloodAssist.GetHashCode();
                if (this.FirstBloodKill != null)
                    hash = hash * 59 + this.FirstBloodKill.GetHashCode();
                if (this.FirstInhibitorAssist != null)
                    hash = hash * 59 + this.FirstInhibitorAssist.GetHashCode();
                if (this.FirstInhibitorKill != null)
                    hash = hash * 59 + this.FirstInhibitorKill.GetHashCode();
                if (this.FirstTowerAssist != null)
                    hash = hash * 59 + this.FirstTowerAssist.GetHashCode();
                if (this.FirstTowerKill != null)
                    hash = hash * 59 + this.FirstTowerKill.GetHashCode();
                if (this.GameEndedInEarlySurrender != null)
                    hash = hash * 59 + this.GameEndedInEarlySurrender.GetHashCode();
                if (this.GameEndedInSurrender != null)
                    hash = hash * 59 + this.GameEndedInSurrender.GetHashCode();
                if (this.GoldEarned != null)
                    hash = hash * 59 + this.GoldEarned.GetHashCode();
                if (this.GoldSpent != null)
                    hash = hash * 59 + this.GoldSpent.GetHashCode();
                if (this.InhibitorKills != null)
                    hash = hash * 59 + this.InhibitorKills.GetHashCode();
                if (this.Item0 != null)
                    hash = hash * 59 + this.Item0.GetHashCode();
                if (this.Item1 != null)
                    hash = hash * 59 + this.Item1.GetHashCode();
                if (this.Item2 != null)
                    hash = hash * 59 + this.Item2.GetHashCode();
                if (this.Item3 != null)
                    hash = hash * 59 + this.Item3.GetHashCode();
                if (this.Item4 != null)
                    hash = hash * 59 + this.Item4.GetHashCode();
                if (this.Item5 != null)
                    hash = hash * 59 + this.Item5.GetHashCode();
                if (this.Item6 != null)
                    hash = hash * 59 + this.Item6.GetHashCode();
                if (this.KillingSprees != null)
                    hash = hash * 59 + this.KillingSprees.GetHashCode();
                if (this.Kills != null)
                    hash = hash * 59 + this.Kills.GetHashCode();
                if (this.LargestCriticalStrike != null)
                    hash = hash * 59 + this.LargestCriticalStrike.GetHashCode();
                if (this.LargestKillingSpree != null)
                    hash = hash * 59 + this.LargestKillingSpree.GetHashCode();
                if (this.LargestMultiKill != null)
                    hash = hash * 59 + this.LargestMultiKill.GetHashCode();
                if (this.LongestTimeSpentLiving != null)
                    hash = hash * 59 + this.LongestTimeSpentLiving.GetHashCode();
                if (this.MagicDamageDealt != null)
                    hash = hash * 59 + this.MagicDamageDealt.GetHashCode();
                if (this.MagicDamageDealtToChampions != null)
                    hash = hash * 59 + this.MagicDamageDealtToChampions.GetHashCode();
                if (this.MagicalDamageTaken != null)
                    hash = hash * 59 + this.MagicalDamageTaken.GetHashCode();
                if (this.NeutralMinionsKilled != null)
                    hash = hash * 59 + this.NeutralMinionsKilled.GetHashCode();
                if (this.NeutralMinionsKilledEnemyJungle != null)
                    hash = hash * 59 + this.NeutralMinionsKilledEnemyJungle.GetHashCode();
                if (this.NeutralMinionsKilledTeamJungle != null)
                    hash = hash * 59 + this.NeutralMinionsKilledTeamJungle.GetHashCode();
                if (this.ObjectivePlayerScore != null)
                    hash = hash * 59 + this.ObjectivePlayerScore.GetHashCode();
                if (this.ParticipantId != null)
                    hash = hash * 59 + this.ParticipantId.GetHashCode();
                if (this.PentaKills != null)
                    hash = hash * 59 + this.PentaKills.GetHashCode();
                if (this.Perk0 != null)
                    hash = hash * 59 + this.Perk0.GetHashCode();
                if (this.Perk0Var1 != null)
                    hash = hash * 59 + this.Perk0Var1.GetHashCode();
                if (this.Perk0Var2 != null)
                    hash = hash * 59 + this.Perk0Var2.GetHashCode();
                if (this.Perk0Var3 != null)
                    hash = hash * 59 + this.Perk0Var3.GetHashCode();
                if (this.Perk1 != null)
                    hash = hash * 59 + this.Perk1.GetHashCode();
                if (this.Perk1Var1 != null)
                    hash = hash * 59 + this.Perk1Var1.GetHashCode();
                if (this.Perk1Var2 != null)
                    hash = hash * 59 + this.Perk1Var2.GetHashCode();
                if (this.Perk1Var3 != null)
                    hash = hash * 59 + this.Perk1Var3.GetHashCode();
                if (this.Perk2 != null)
                    hash = hash * 59 + this.Perk2.GetHashCode();
                if (this.Perk2Var1 != null)
                    hash = hash * 59 + this.Perk2Var1.GetHashCode();
                if (this.Perk2Var2 != null)
                    hash = hash * 59 + this.Perk2Var2.GetHashCode();
                if (this.Perk2Var3 != null)
                    hash = hash * 59 + this.Perk2Var3.GetHashCode();
                if (this.Perk3 != null)
                    hash = hash * 59 + this.Perk3.GetHashCode();
                if (this.Perk3Var1 != null)
                    hash = hash * 59 + this.Perk3Var1.GetHashCode();
                if (this.Perk3Var2 != null)
                    hash = hash * 59 + this.Perk3Var2.GetHashCode();
                if (this.Perk3Var3 != null)
                    hash = hash * 59 + this.Perk3Var3.GetHashCode();
                if (this.Perk4 != null)
                    hash = hash * 59 + this.Perk4.GetHashCode();
                if (this.Perk4Var1 != null)
                    hash = hash * 59 + this.Perk4Var1.GetHashCode();
                if (this.Perk4Var2 != null)
                    hash = hash * 59 + this.Perk4Var2.GetHashCode();
                if (this.Perk4Var3 != null)
                    hash = hash * 59 + this.Perk4Var3.GetHashCode();
                if (this.Perk5 != null)
                    hash = hash * 59 + this.Perk5.GetHashCode();
                if (this.Perk5Var1 != null)
                    hash = hash * 59 + this.Perk5Var1.GetHashCode();
                if (this.Perk5Var2 != null)
                    hash = hash * 59 + this.Perk5Var2.GetHashCode();
                if (this.Perk5Var3 != null)
                    hash = hash * 59 + this.Perk5Var3.GetHashCode();
                if (this.PerkPrimaryStyle != null)
                    hash = hash * 59 + this.PerkPrimaryStyle.GetHashCode();
                if (this.PerkSubStyle != null)
                    hash = hash * 59 + this.PerkSubStyle.GetHashCode();
                if (this.PhysicalDamageDealt != null)
                    hash = hash * 59 + this.PhysicalDamageDealt.GetHashCode();
                if (this.PhysicalDamageDealtToChampions != null)
                    hash = hash * 59 + this.PhysicalDamageDealtToChampions.GetHashCode();
                if (this.PhysicalDamageTaken != null)
                    hash = hash * 59 + this.PhysicalDamageTaken.GetHashCode();
                if (this.PlayerScore0 != null)
                    hash = hash * 59 + this.PlayerScore0.GetHashCode();
                if (this.PlayerScore1 != null)
                    hash = hash * 59 + this.PlayerScore1.GetHashCode();
                if (this.PlayerScore2 != null)
                    hash = hash * 59 + this.PlayerScore2.GetHashCode();
                if (this.PlayerScore3 != null)
                    hash = hash * 59 + this.PlayerScore3.GetHashCode();
                if (this.PlayerScore4 != null)
                    hash = hash * 59 + this.PlayerScore4.GetHashCode();
                if (this.PlayerScore5 != null)
                    hash = hash * 59 + this.PlayerScore5.GetHashCode();
                if (this.PlayerScore6 != null)
                    hash = hash * 59 + this.PlayerScore6.GetHashCode();
                if (this.PlayerScore7 != null)
                    hash = hash * 59 + this.PlayerScore7.GetHashCode();
                if (this.PlayerScore8 != null)
                    hash = hash * 59 + this.PlayerScore8.GetHashCode();
                if (this.PlayerScore9 != null)
                    hash = hash * 59 + this.PlayerScore9.GetHashCode();
                if (this.QuadraKills != null)
                    hash = hash * 59 + this.QuadraKills.GetHashCode();
                if (this.SightWardsBoughtInGame != null)
                    hash = hash * 59 + this.SightWardsBoughtInGame.GetHashCode();
                if (this.TeamEarlySurrendered != null)
                    hash = hash * 59 + this.TeamEarlySurrendered.GetHashCode();
                if (this.TimeCCingOthers != null)
                    hash = hash * 59 + this.TimeCCingOthers.GetHashCode();
                if (this.TotalDamageDealt != null)
                    hash = hash * 59 + this.TotalDamageDealt.GetHashCode();
                if (this.TotalDamageDealtToChampions != null)
                    hash = hash * 59 + this.TotalDamageDealtToChampions.GetHashCode();
                if (this.TotalDamageTaken != null)
                    hash = hash * 59 + this.TotalDamageTaken.GetHashCode();
                if (this.TotalHeal != null)
                    hash = hash * 59 + this.TotalHeal.GetHashCode();
                if (this.TotalMinionsKilled != null)
                    hash = hash * 59 + this.TotalMinionsKilled.GetHashCode();
                if (this.TotalPlayerScore != null)
                    hash = hash * 59 + this.TotalPlayerScore.GetHashCode();
                if (this.TotalScoreRank != null)
                    hash = hash * 59 + this.TotalScoreRank.GetHashCode();
                if (this.TotalTimeCrowdControlDealt != null)
                    hash = hash * 59 + this.TotalTimeCrowdControlDealt.GetHashCode();
                if (this.TotalUnitsHealed != null)
                    hash = hash * 59 + this.TotalUnitsHealed.GetHashCode();
                if (this.TripleKills != null)
                    hash = hash * 59 + this.TripleKills.GetHashCode();
                if (this.TrueDamageDealt != null)
                    hash = hash * 59 + this.TrueDamageDealt.GetHashCode();
                if (this.TrueDamageDealtToChampions != null)
                    hash = hash * 59 + this.TrueDamageDealtToChampions.GetHashCode();
                if (this.TrueDamageTaken != null)
                    hash = hash * 59 + this.TrueDamageTaken.GetHashCode();
                if (this.TurretKills != null)
                    hash = hash * 59 + this.TurretKills.GetHashCode();
                if (this.UnrealKills != null)
                    hash = hash * 59 + this.UnrealKills.GetHashCode();
                if (this.VisionScore != null)
                    hash = hash * 59 + this.VisionScore.GetHashCode();
                if (this.VisionWardsBoughtInGame != null)
                    hash = hash * 59 + this.VisionWardsBoughtInGame.GetHashCode();
                if (this.WardsKilled != null)
                    hash = hash * 59 + this.WardsKilled.GetHashCode();
                if (this.WardsPlaced != null)
                    hash = hash * 59 + this.WardsPlaced.GetHashCode();
                if (this.Win != null)
                    hash = hash * 59 + this.Win.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
