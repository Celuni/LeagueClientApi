/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// LolPurchaseWidgetValidationResponseItem
    /// </summary>
    [DataContract]
    public partial class LolPurchaseWidgetValidationResponseItem :  IEquatable<LolPurchaseWidgetValidationResponseItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LolPurchaseWidgetValidationResponseItem" /> class.
        /// </summary>
        /// <param name="Description">Description.</param>
        /// <param name="ItemKey">ItemKey.</param>
        /// <param name="Name">Name.</param>
        /// <param name="Prices">Prices.</param>
        /// <param name="Quantity">Quantity.</param>
        /// <param name="Sale">Sale.</param>
        public LolPurchaseWidgetValidationResponseItem(string Description = default(string), LolPurchaseWidgetItemKey ItemKey = default(LolPurchaseWidgetItemKey), string Name = default(string), List<LolPurchaseWidgetItemPrice> Prices = default(List<LolPurchaseWidgetItemPrice>), int? Quantity = default(int?), LolPurchaseWidgetSale Sale = default(LolPurchaseWidgetSale))
        {
            this.Description = Description;
            this.ItemKey = ItemKey;
            this.Name = Name;
            this.Prices = Prices;
            this.Quantity = Quantity;
            this.Sale = Sale;
        }
        
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ItemKey
        /// </summary>
        [DataMember(Name="itemKey", EmitDefaultValue=false)]
        public LolPurchaseWidgetItemKey ItemKey { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Prices
        /// </summary>
        [DataMember(Name="prices", EmitDefaultValue=false)]
        public List<LolPurchaseWidgetItemPrice> Prices { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public int? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets Sale
        /// </summary>
        [DataMember(Name="sale", EmitDefaultValue=false)]
        public LolPurchaseWidgetSale Sale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LolPurchaseWidgetValidationResponseItem {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ItemKey: ").Append(ItemKey).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Prices: ").Append(Prices).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Sale: ").Append(Sale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LolPurchaseWidgetValidationResponseItem);
        }

        /// <summary>
        /// Returns true if LolPurchaseWidgetValidationResponseItem instances are equal
        /// </summary>
        /// <param name="other">Instance of LolPurchaseWidgetValidationResponseItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LolPurchaseWidgetValidationResponseItem other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Description == other.Description ||
                    this.Description != null &&
                    this.Description.Equals(other.Description)
                ) && 
                (
                    this.ItemKey == other.ItemKey ||
                    this.ItemKey != null &&
                    this.ItemKey.Equals(other.ItemKey)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.Prices == other.Prices ||
                    this.Prices != null &&
                    this.Prices.SequenceEqual(other.Prices)
                ) && 
                (
                    this.Quantity == other.Quantity ||
                    this.Quantity != null &&
                    this.Quantity.Equals(other.Quantity)
                ) && 
                (
                    this.Sale == other.Sale ||
                    this.Sale != null &&
                    this.Sale.Equals(other.Sale)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Description != null)
                    hash = hash * 59 + this.Description.GetHashCode();
                if (this.ItemKey != null)
                    hash = hash * 59 + this.ItemKey.GetHashCode();
                if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                if (this.Prices != null)
                    hash = hash * 59 + this.Prices.GetHashCode();
                if (this.Quantity != null)
                    hash = hash * 59 + this.Quantity.GetHashCode();
                if (this.Sale != null)
                    hash = hash * 59 + this.Sale.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
