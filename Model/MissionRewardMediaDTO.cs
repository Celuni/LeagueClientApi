/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// MissionRewardMediaDTO
    /// </summary>
    [DataContract]
    public partial class MissionRewardMediaDTO :  IEquatable<MissionRewardMediaDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MissionRewardMediaDTO" /> class.
        /// </summary>
        /// <param name="Intro">Intro.</param>
        /// <param name="Loop">Loop.</param>
        /// <param name="Outro">Outro.</param>
        public MissionRewardMediaDTO(MissionRewardMediaItemDTO Intro = default(MissionRewardMediaItemDTO), MissionRewardMediaItemDTO Loop = default(MissionRewardMediaItemDTO), MissionRewardMediaItemDTO Outro = default(MissionRewardMediaItemDTO))
        {
            this.Intro = Intro;
            this.Loop = Loop;
            this.Outro = Outro;
        }
        
        /// <summary>
        /// Gets or Sets Intro
        /// </summary>
        [DataMember(Name="intro", EmitDefaultValue=false)]
        public MissionRewardMediaItemDTO Intro { get; set; }

        /// <summary>
        /// Gets or Sets Loop
        /// </summary>
        [DataMember(Name="loop", EmitDefaultValue=false)]
        public MissionRewardMediaItemDTO Loop { get; set; }

        /// <summary>
        /// Gets or Sets Outro
        /// </summary>
        [DataMember(Name="outro", EmitDefaultValue=false)]
        public MissionRewardMediaItemDTO Outro { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MissionRewardMediaDTO {\n");
            sb.Append("  Intro: ").Append(Intro).Append("\n");
            sb.Append("  Loop: ").Append(Loop).Append("\n");
            sb.Append("  Outro: ").Append(Outro).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as MissionRewardMediaDTO);
        }

        /// <summary>
        /// Returns true if MissionRewardMediaDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of MissionRewardMediaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MissionRewardMediaDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Intro == other.Intro ||
                    this.Intro != null &&
                    this.Intro.Equals(other.Intro)
                ) && 
                (
                    this.Loop == other.Loop ||
                    this.Loop != null &&
                    this.Loop.Equals(other.Loop)
                ) && 
                (
                    this.Outro == other.Outro ||
                    this.Outro != null &&
                    this.Outro.Equals(other.Outro)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Intro != null)
                    hash = hash * 59 + this.Intro.GetHashCode();
                if (this.Loop != null)
                    hash = hash * 59 + this.Loop.GetHashCode();
                if (this.Outro != null)
                    hash = hash * 59 + this.Outro.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
