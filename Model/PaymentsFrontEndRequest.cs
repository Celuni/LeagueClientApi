/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// PaymentsFrontEndRequest
    /// </summary>
    [DataContract]
    public partial class PaymentsFrontEndRequest :  IEquatable<PaymentsFrontEndRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsFrontEndRequest" /> class.
        /// </summary>
        /// <param name="GifteeAccountId">GifteeAccountId.</param>
        /// <param name="GifteeMessage">GifteeMessage.</param>
        /// <param name="IsPrepaid">IsPrepaid.</param>
        /// <param name="LocaleId">LocaleId.</param>
        /// <param name="RsoToken">RsoToken.</param>
        /// <param name="SummonerLevel">SummonerLevel.</param>
        public PaymentsFrontEndRequest(int? GifteeAccountId = default(int?), string GifteeMessage = default(string), bool? IsPrepaid = default(bool?), string LocaleId = default(string), string RsoToken = default(string), int? SummonerLevel = default(int?))
        {
            this.GifteeAccountId = GifteeAccountId;
            this.GifteeMessage = GifteeMessage;
            this.IsPrepaid = IsPrepaid;
            this.LocaleId = LocaleId;
            this.RsoToken = RsoToken;
            this.SummonerLevel = SummonerLevel;
        }
        
        /// <summary>
        /// Gets or Sets GifteeAccountId
        /// </summary>
        [DataMember(Name="gifteeAccountId", EmitDefaultValue=false)]
        public int? GifteeAccountId { get; set; }

        /// <summary>
        /// Gets or Sets GifteeMessage
        /// </summary>
        [DataMember(Name="gifteeMessage", EmitDefaultValue=false)]
        public string GifteeMessage { get; set; }

        /// <summary>
        /// Gets or Sets IsPrepaid
        /// </summary>
        [DataMember(Name="isPrepaid", EmitDefaultValue=false)]
        public bool? IsPrepaid { get; set; }

        /// <summary>
        /// Gets or Sets LocaleId
        /// </summary>
        [DataMember(Name="localeId", EmitDefaultValue=false)]
        public string LocaleId { get; set; }

        /// <summary>
        /// Gets or Sets RsoToken
        /// </summary>
        [DataMember(Name="rsoToken", EmitDefaultValue=false)]
        public string RsoToken { get; set; }

        /// <summary>
        /// Gets or Sets SummonerLevel
        /// </summary>
        [DataMember(Name="summonerLevel", EmitDefaultValue=false)]
        public int? SummonerLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsFrontEndRequest {\n");
            sb.Append("  GifteeAccountId: ").Append(GifteeAccountId).Append("\n");
            sb.Append("  GifteeMessage: ").Append(GifteeMessage).Append("\n");
            sb.Append("  IsPrepaid: ").Append(IsPrepaid).Append("\n");
            sb.Append("  LocaleId: ").Append(LocaleId).Append("\n");
            sb.Append("  RsoToken: ").Append(RsoToken).Append("\n");
            sb.Append("  SummonerLevel: ").Append(SummonerLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PaymentsFrontEndRequest);
        }

        /// <summary>
        /// Returns true if PaymentsFrontEndRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of PaymentsFrontEndRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsFrontEndRequest other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.GifteeAccountId == other.GifteeAccountId ||
                    this.GifteeAccountId != null &&
                    this.GifteeAccountId.Equals(other.GifteeAccountId)
                ) && 
                (
                    this.GifteeMessage == other.GifteeMessage ||
                    this.GifteeMessage != null &&
                    this.GifteeMessage.Equals(other.GifteeMessage)
                ) && 
                (
                    this.IsPrepaid == other.IsPrepaid ||
                    this.IsPrepaid != null &&
                    this.IsPrepaid.Equals(other.IsPrepaid)
                ) && 
                (
                    this.LocaleId == other.LocaleId ||
                    this.LocaleId != null &&
                    this.LocaleId.Equals(other.LocaleId)
                ) && 
                (
                    this.RsoToken == other.RsoToken ||
                    this.RsoToken != null &&
                    this.RsoToken.Equals(other.RsoToken)
                ) && 
                (
                    this.SummonerLevel == other.SummonerLevel ||
                    this.SummonerLevel != null &&
                    this.SummonerLevel.Equals(other.SummonerLevel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.GifteeAccountId != null)
                    hash = hash * 59 + this.GifteeAccountId.GetHashCode();
                if (this.GifteeMessage != null)
                    hash = hash * 59 + this.GifteeMessage.GetHashCode();
                if (this.IsPrepaid != null)
                    hash = hash * 59 + this.IsPrepaid.GetHashCode();
                if (this.LocaleId != null)
                    hash = hash * 59 + this.LocaleId.GetHashCode();
                if (this.RsoToken != null)
                    hash = hash * 59 + this.RsoToken.GetHashCode();
                if (this.SummonerLevel != null)
                    hash = hash * 59 + this.SummonerLevel.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
