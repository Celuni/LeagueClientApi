/* 
 * LeagueClient
 *
 * 7.23.209.3517
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;


namespace LeagueClientApi.Model
{
    /// <summary>
    /// PaymentsPMCStartUrlResult
    /// </summary>
    [DataContract]
    public partial class PaymentsPMCStartUrlResult :  IEquatable<PaymentsPMCStartUrlResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentsPMCStartUrlResult" /> class.
        /// </summary>
        /// <param name="CreatedAt">CreatedAt.</param>
        /// <param name="Id">Id.</param>
        /// <param name="LocaleId">LocaleId.</param>
        /// <param name="PlayerFacingId">PlayerFacingId.</param>
        /// <param name="PmcStartUrl">PmcStartUrl.</param>
        /// <param name="SummonerLevel">SummonerLevel.</param>
        /// <param name="UserId">UserId.</param>
        public PaymentsPMCStartUrlResult(string CreatedAt = default(string), string Id = default(string), string LocaleId = default(string), string PlayerFacingId = default(string), string PmcStartUrl = default(string), int? SummonerLevel = default(int?), string UserId = default(string))
        {
            this.CreatedAt = CreatedAt;
            this.Id = Id;
            this.LocaleId = LocaleId;
            this.PlayerFacingId = PlayerFacingId;
            this.PmcStartUrl = PmcStartUrl;
            this.SummonerLevel = SummonerLevel;
            this.UserId = UserId;
        }
        
        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LocaleId
        /// </summary>
        [DataMember(Name="localeId", EmitDefaultValue=false)]
        public string LocaleId { get; set; }

        /// <summary>
        /// Gets or Sets PlayerFacingId
        /// </summary>
        [DataMember(Name="playerFacingId", EmitDefaultValue=false)]
        public string PlayerFacingId { get; set; }

        /// <summary>
        /// Gets or Sets PmcStartUrl
        /// </summary>
        [DataMember(Name="pmcStartUrl", EmitDefaultValue=false)]
        public string PmcStartUrl { get; set; }

        /// <summary>
        /// Gets or Sets SummonerLevel
        /// </summary>
        [DataMember(Name="summonerLevel", EmitDefaultValue=false)]
        public int? SummonerLevel { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentsPMCStartUrlResult {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LocaleId: ").Append(LocaleId).Append("\n");
            sb.Append("  PlayerFacingId: ").Append(PlayerFacingId).Append("\n");
            sb.Append("  PmcStartUrl: ").Append(PmcStartUrl).Append("\n");
            sb.Append("  SummonerLevel: ").Append(SummonerLevel).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PaymentsPMCStartUrlResult);
        }

        /// <summary>
        /// Returns true if PaymentsPMCStartUrlResult instances are equal
        /// </summary>
        /// <param name="other">Instance of PaymentsPMCStartUrlResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentsPMCStartUrlResult other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CreatedAt == other.CreatedAt ||
                    this.CreatedAt != null &&
                    this.CreatedAt.Equals(other.CreatedAt)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.LocaleId == other.LocaleId ||
                    this.LocaleId != null &&
                    this.LocaleId.Equals(other.LocaleId)
                ) && 
                (
                    this.PlayerFacingId == other.PlayerFacingId ||
                    this.PlayerFacingId != null &&
                    this.PlayerFacingId.Equals(other.PlayerFacingId)
                ) && 
                (
                    this.PmcStartUrl == other.PmcStartUrl ||
                    this.PmcStartUrl != null &&
                    this.PmcStartUrl.Equals(other.PmcStartUrl)
                ) && 
                (
                    this.SummonerLevel == other.SummonerLevel ||
                    this.SummonerLevel != null &&
                    this.SummonerLevel.Equals(other.SummonerLevel)
                ) && 
                (
                    this.UserId == other.UserId ||
                    this.UserId != null &&
                    this.UserId.Equals(other.UserId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CreatedAt != null)
                    hash = hash * 59 + this.CreatedAt.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.LocaleId != null)
                    hash = hash * 59 + this.LocaleId.GetHashCode();
                if (this.PlayerFacingId != null)
                    hash = hash * 59 + this.PlayerFacingId.GetHashCode();
                if (this.PmcStartUrl != null)
                    hash = hash * 59 + this.PmcStartUrl.GetHashCode();
                if (this.SummonerLevel != null)
                    hash = hash * 59 + this.SummonerLevel.GetHashCode();
                if (this.UserId != null)
                    hash = hash * 59 + this.UserId.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
